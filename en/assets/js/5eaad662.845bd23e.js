"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1175],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),d=i,m=u["".concat(c,".").concat(d)]||u[d]||h[d]||o;return t?n.createElement(m,a(a({ref:r},p),{},{components:t})):n.createElement(m,a({ref:r},p))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68810:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(87462),i=(t(67294),t(3905));const o={},a="Code Structure and Versioning",l={unversionedId:"basic/architecture",id:"basic/architecture",title:"Code Structure and Versioning",description:"The complete HybridCLR codebase consists of three repositories:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/basic/architecture.md",sourceDirName:"basic",slug:"/basic/architecture",permalink:"/en/docs/basic/architecture",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HybridCLR + lua/js/python",permalink:"/en/docs/basic/workwithscriptlanguage"},next:{title:"HybridCLR Source Code Structure and Debugging",permalink:"/en/docs/basic/sourceinspect"}},c={},s=[{value:"il2cpp_plus",id:"il2cpp_plus",level:2},{value:"hybridclr",id:"hybridclr",level:2},{value:"com.code-philosophy.hybridclr",id:"comcode-philosophyhybridclr",level:2}],p={toc:s},u="wrapper";function h(e){let{components:r,...t}=e;return(0,i.kt)(u,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"code-structure-and-versioning"},"Code Structure and Versioning"),(0,i.kt)("p",null,"The complete HybridCLR codebase consists of three repositories:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"il2cpp_plus"),(0,i.kt)("li",{parentName:"ul"},"hybridclr"),(0,i.kt)("li",{parentName:"ul"},"com.code-philosophy.hybridclr")),(0,i.kt)("p",null,"These three repositories have independent version numbers, so when referring to HybridCLR versions, it generally includes all three version numbers."),(0,i.kt)("h2",{id:"il2cpp_plus"},"il2cpp_plus"),(0,i.kt)("p",null,"Repository: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/il2cpp_plus"},"github")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitee.com/focus-creative-games/il2cpp_plus"},"gitee")),(0,i.kt)("p",null,"HybridCLR extends the il2cpp runtime, requiring minor adjustments to the original il2cpp code to support hybrid execution mode. This code corresponds to the il2cpp_plus repository. Since il2cpp has significant changes with each major annual version, adaptation is required for each Unity major version."),(0,i.kt)("p",null,"Each annual version corresponds to a ",(0,i.kt)("inlineCode",{parentName:"p"},"{version}-main")," branch, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"2021-main"),"."),(0,i.kt)("p",null,"Currently, each annual version also has an older 1.0 branch ",(0,i.kt)("inlineCode",{parentName:"p"},"{version}-1.0"),", such as ",(0,i.kt)("inlineCode",{parentName:"p"},"2019-1.0"),"."),(0,i.kt)("h2",{id:"hybridclr"},"hybridclr"),(0,i.kt)("p",null,"Repository: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/hybridclr"},"github")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitee.com/focus-creative-games/hybridclr"},"gitee")),(0,i.kt)("p",null,"The hybridclr repository contains the interpreter's core code. All il2cpp_plus versions share the same hybridclr codebase, regardless of Unity major version. Currently, there are two branches:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"main"),(0,i.kt)("li",{parentName:"ul"},"3.x"),(0,i.kt)("li",{parentName:"ul"},"2.x"),(0,i.kt)("li",{parentName:"ul"},"1.0")),(0,i.kt)("h2",{id:"comcode-philosophyhybridclr"},"com.code-philosophy.hybridclr"),(0,i.kt)("p",null,"Repository: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/hybridclr_unity"},"github")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitee.com/focus-creative-games/hybridclr_unity"},"gitee")),(0,i.kt)("p",null,"com.code-philosophy.hybridclr is a Unity Package that contains runtime code and editor workflow tools needed for using HybridCLR."),(0,i.kt)("p",null,"com.code-philosophy.hybridclr also doesn't distinguish Unity major versions, so like hybridclr, it currently has two branches:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"main"),(0,i.kt)("li",{parentName:"ul"},"3.x"),(0,i.kt)("li",{parentName:"ul"},"2.x"),(0,i.kt)("li",{parentName:"ul"},"1.0")),(0,i.kt)("p",null,"In early versions (such as the 1.0 branch), you needed to specify which il2cpp_plus and hybridclr branches to install in the Installer. The branches of these two repositories must match,\ni.e., il2cpp_plus's ",(0,i.kt)("inlineCode",{parentName:"p"},"{version}-main")," matches with hybridclr's ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"{version}-1.0")," matches with ",(0,i.kt)("inlineCode",{parentName:"p"},"1.0"),"."),(0,i.kt)("p",null,"Starting from version ",(0,i.kt)("inlineCode",{parentName:"p"},"v2.0.0-rc")," (belonging to the main branch), com.code-philosophy.hybridclr directly configures the version numbers of compatible il2cpp_plus and hybridclr repositories. For developers,\nyou only need to install the appropriate com.code-philosophy.hybridclr version."))}h.isMDXComponent=!0}}]);