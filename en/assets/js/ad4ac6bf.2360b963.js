"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[687],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),d=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||l;return n?i.createElement(h,o(o({ref:t},p),{},{components:n})):i.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[c]="string"==typeof e?e:a,o[1]=r;for(var d=2;d<l;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75925:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var i=n(87462),a=(n(67294),n(3905));const l={},o="Quick Start Guide",r={unversionedId:"beginner/quickstart",id:"beginner/quickstart",title:"Quick Start Guide",description:"This tutorial guides you through experiencing HybridCLR hot updates starting from an empty project. For simplicity, we will only demonstrate with BuildTarget set to Windows or MacOS Standalone platforms.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/quickstart.md",sourceDirName:"beginner",slug:"/beginner/quickstart",permalink:"/en/docs/beginner/quickstart",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u65b0\u624b\u6559\u7a0b",permalink:"/en/docs/beginner"},next:{title:"Using MonoBehaviour",permalink:"/en/docs/beginner/monobehaviour"}},s={},d=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"Environment Setup",id:"environment-setup",level:2},{value:"Installing Unity",id:"installing-unity",level:3},{value:"Install IDE and Related Build Environment",id:"install-ide-and-related-build-environment",level:3},{value:"Installing HybridCLR",id:"installing-hybridclr",level:2},{value:"Install the <code>com.code-philosophy.hybridclr</code> Package",id:"install-the-comcode-philosophyhybridclr-package",level:3},{value:"Initialize <code>com.code-philosophy.hybridclr</code>",id:"initialize-comcode-philosophyhybridclr",level:3},{value:"Initialize Unity Hot Update Project",id:"initialize-unity-hot-update-project",level:2},{value:"Create Project",id:"create-project",level:3},{value:"Create <code>ConsoleToScreen.cs</code> Script",id:"create-consoletoscreencs-script",level:3},{value:"Create Main Scene",id:"create-main-scene",level:3},{value:"Create HotUpdate Hot Update Module",id:"create-hotupdate-hot-update-module",level:3},{value:"Configure HybridCLR",id:"configure-hybridclr",level:2},{value:"Configure HybridCLR",id:"configure-hybridclr-1",level:3},{value:"Configure PlayerSettings",id:"configure-playersettings",level:3},{value:"Create hot update script",id:"create-hot-update-script",level:2},{value:"Load hot update assembly",id:"load-hot-update-assembly",level:2},{value:"Call hot update code",id:"call-hot-update-code",level:2},{value:"Test run in Editor",id:"test-run-in-editor",level:2},{value:"Build and run",id:"build-and-run",level:2},{value:"Test hot update",id:"test-hot-update",level:2}],p={toc:d},c="wrapper";function u(e){let{components:t,...l}=e;return(0,a.kt)(c,(0,i.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start-guide"},"Quick Start Guide"),(0,a.kt)("p",null,"This tutorial guides you through experiencing HybridCLR hot updates starting from an empty project. For simplicity, we will only demonstrate with BuildTarget set to ",(0,a.kt)("strong",{parentName:"p"},"Windows")," or ",(0,a.kt)("strong",{parentName:"p"},"MacOS")," Standalone platforms."),(0,a.kt)("p",null,"Please ensure the hot update process works correctly on the Standalone platform before trying it on Android or iOS platforms, as their processes are very similar."),(0,a.kt)("h2",{id:"learning-objectives"},"Learning Objectives"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a hot update assembly"),(0,a.kt)("li",{parentName:"ul"},"Load the hot update assembly and execute its hot update code to print ",(0,a.kt)("inlineCode",{parentName:"li"},"Hello, HybridCLR")),(0,a.kt)("li",{parentName:"ul"},"Modify the hot update code to print ",(0,a.kt)("inlineCode",{parentName:"li"},"Hello, World"))),(0,a.kt)("h2",{id:"environment-setup"},"Environment Setup"),(0,a.kt)("h3",{id:"installing-unity"},"Installing Unity"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"HybridCLR supports all LTS versions of Unity from 2019 to 6000. If your current version is not among the recommended versions below, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/en/docs/basic/install"},"Installing HybridCLR")," documentation.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install any of the following versions: 2019.4.40, 2020.3.26+, 2021.3.0+, 2022.3.0+, 6000.0.0+"),(0,a.kt)("li",{parentName:"ul"},"When selecting modules during installation based on your operating system, you must select ",(0,a.kt)("inlineCode",{parentName:"li"},"Windows Build Support(IL2CPP)")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"Mac Build Support(IL2CPP)"),".")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"select il2cpp modules",src:n(68581).Z,width:"721",height:"507"})),(0,a.kt)("h3",{id:"install-ide-and-related-build-environment"},"Install IDE and Related Build Environment"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Windows",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"On Windows, you need to install ",(0,a.kt)("inlineCode",{parentName:"li"},"Visual Studio 2019")," or higher. The installation must include at least ",(0,a.kt)("inlineCode",{parentName:"li"},"Game development with Unity")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Game development with C++")," components."),(0,a.kt)("li",{parentName:"ul"},"Install git"))),(0,a.kt)("li",{parentName:"ul"},"Mac",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Requires macOS version >= 12, Xcode version >= 13, for example ",(0,a.kt)("inlineCode",{parentName:"li"},"Xcode 13.4.1, macOS 12.4"),"."),(0,a.kt)("li",{parentName:"ul"},"Install git")))),(0,a.kt)("h2",{id:"installing-hybridclr"},"Installing HybridCLR"),(0,a.kt)("h3",{id:"install-the-comcode-philosophyhybridclr-package"},"Install the ",(0,a.kt)("inlineCode",{parentName:"h3"},"com.code-philosophy.hybridclr")," Package"),(0,a.kt)("p",null,"Open the Package Manager by clicking ",(0,a.kt)("inlineCode",{parentName:"p"},"Windows/Package Manager")," in the main menu. Click ",(0,a.kt)("inlineCode",{parentName:"p"},"Add package from git URL...")," as shown in the image below, and enter ",(0,a.kt)("inlineCode",{parentName:"p"},"https://gitee.com/focus-creative-games/hybridclr_unity.git")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"https://github.com/focus-creative-games/hybridclr_unity.git"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"add package",src:n(95283).Z,width:"808",height:"223"})),(0,a.kt)("p",null,"If you're unfamiliar with installing packages from URLs, please see ",(0,a.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/Manual/upm-ui-giturl.html"},"install from giturl"),"."),(0,a.kt)("p",null,"Due to network issues in China, you may encounter network exceptions that prevent installation in Unity. You can first clone or download ",(0,a.kt)("inlineCode",{parentName:"p"},"com.code-philosophy.hybridclr")," locally, rename the folder to ",(0,a.kt)("inlineCode",{parentName:"p"},"com.code-philosophy.hybridclr"),", and move it directly to the project's ",(0,a.kt)("inlineCode",{parentName:"p"},"Packages")," directory."),(0,a.kt)("h3",{id:"initialize-comcode-philosophyhybridclr"},"Initialize ",(0,a.kt)("inlineCode",{parentName:"h3"},"com.code-philosophy.hybridclr")),(0,a.kt)("p",null,"Open the menu ",(0,a.kt)("inlineCode",{parentName:"p"},"HybridCLR/Installer..."),", click the ",(0,a.kt)("inlineCode",{parentName:"p"},"Install")," button to install. Wait patiently for about 30 seconds. After installation is complete, it will print an ",(0,a.kt)("inlineCode",{parentName:"p"},"Installation Successful")," log at the end."),(0,a.kt)("h2",{id:"initialize-unity-hot-update-project"},"Initialize Unity Hot Update Project"),(0,a.kt)("p",null,"The process of building a hot update project from scratch is quite lengthy. You can refer to the hybridclr_trial project for project structure, resources, and code. Its repository is available at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/hybridclr_trial"},"github")," or ",(0,a.kt)("a",{parentName:"p",href:"https://gitee.com/focus-creative-games/hybridclr_trial"},"gitee"),"."),(0,a.kt)("h3",{id:"create-project"},"Create Project"),(0,a.kt)("p",null,"Create an empty Unity project."),(0,a.kt)("h3",{id:"create-consoletoscreencs-script"},"Create ",(0,a.kt)("inlineCode",{parentName:"h3"},"ConsoleToScreen.cs")," Script"),(0,a.kt)("p",null,"This script doesn't directly contribute to the hot update demonstration. It can print logs to the screen, making it easier to locate errors."),(0,a.kt)("p",null,"Create the ",(0,a.kt)("inlineCode",{parentName:"p"},"Assets/ConsoleToScreen.cs")," script class with the following code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ConsoleToScreen : MonoBehaviour\n{\n    const int maxLines = 50;\n    const int maxLineLength = 120;\n    private string _logStr = "";\n\n    private readonly List<string> _lines = new List<string>();\n\n    public int fontSize = 15;\n\n    void OnEnable() { Application.logMessageReceived += Log; }\n    void OnDisable() { Application.logMessageReceived -= Log; }\n\n    public void Log(string logString, string stackTrace, LogType type)\n    {\n        foreach (var line in logString.Split(\'\\n\'))\n        {\n            if (line.Length <= maxLineLength)\n            {\n                _lines.Add(line);\n                continue;\n            }\n            var lineCount = line.Length / maxLineLength + 1;\n            for (int i = 0; i < lineCount; i++)\n            {\n                if ((i + 1) * maxLineLength <= line.Length)\n                {\n                    _lines.Add(line.Substring(i * maxLineLength, maxLineLength));\n                }\n                else\n                {\n                    _lines.Add(line.Substring(i * maxLineLength, line.Length - i * maxLineLength));\n                }\n            }\n        }\n        if (_lines.Count > maxLines)\n        {\n            _lines.RemoveRange(0, _lines.Count - maxLines);\n        }\n        _logStr = string.Join("\\n", _lines);\n    }\n\n    void OnGUI()\n    {\n        GUI.matrix = Matrix4x4.TRS(Vector3.zero, Quaternion.identity,\n           new Vector3(Screen.width / 1200.0f, Screen.height / 800.0f, 1.0f));\n        GUI.Label(new Rect(10, 10, 800, 370), _logStr, new GUIStyle() { fontSize = Math.Max(10, fontSize) });\n    }\n}\n\n\n')),(0,a.kt)("h3",{id:"create-main-scene"},"Create Main Scene"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create default initial scene main.scene"),(0,a.kt)("li",{parentName:"ul"},"Create an empty GameObject in the scene and attach ConsoleToScreen to it"),(0,a.kt)("li",{parentName:"ul"},"Add main scene to the packaging scene list in ",(0,a.kt)("inlineCode",{parentName:"li"},"Build Settings"))),(0,a.kt)("h3",{id:"create-hotupdate-hot-update-module"},"Create HotUpdate Hot Update Module"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create ",(0,a.kt)("inlineCode",{parentName:"li"},"Assets/HotUpdate")," directory"),(0,a.kt)("li",{parentName:"ul"},"Right-click in the directory ",(0,a.kt)("inlineCode",{parentName:"li"},"Create/Assembly Definition"),", create an assembly module named ",(0,a.kt)("inlineCode",{parentName:"li"},"HotUpdate"),(0,a.kt)("admonition",{parentName:"li",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If your project uses Assembly-CSharp as an AOT assembly, it is strongly recommended to disable the ",(0,a.kt)("inlineCode",{parentName:"p"},"auto reference")," option for hot update assemblies. Because Assembly-CSharp is the top-level assembly, enabling this option will automatically reference all remaining assemblies, including hot update assemblies, making it easy to mistakenly reference hot update assemblies and cause packaging failures.")))),(0,a.kt)("h2",{id:"configure-hybridclr"},"Configure HybridCLR"),(0,a.kt)("h3",{id:"configure-hybridclr-1"},"Configure HybridCLR"),(0,a.kt)("p",null,"Open the menu ",(0,a.kt)("inlineCode",{parentName:"p"},"HybridCLR/Settings"),", and add the ",(0,a.kt)("inlineCode",{parentName:"p"},"HotUpdate")," assembly in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Hot Update Assemblies")," configuration item, as shown in the figure below:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"settings",src:n(2035).Z,width:"1129",height:"793"})),(0,a.kt)("h3",{id:"configure-playersettings"},"Configure PlayerSettings"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you are using hybridclr package ",(0,a.kt)("strong",{parentName:"li"},"lower than v4.0.0"),", you need to disable the Use Incremental GC option"),(0,a.kt)("li",{parentName:"ul"},"Switch ",(0,a.kt)("inlineCode",{parentName:"li"},"Scripting Backend")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"IL2CPP")),(0,a.kt)("li",{parentName:"ul"},"Switch ",(0,a.kt)("inlineCode",{parentName:"li"},"Api Compatability Level")," to ",(0,a.kt)("inlineCode",{parentName:"li"},".Net 4.x")," (Unity 2019-2020) or ",(0,a.kt)("inlineCode",{parentName:"li"},".Net Framework")," (Unity 2021+)")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"player settings",src:n(15333).Z,width:"716",height:"386"})),(0,a.kt)("h2",{id:"create-hot-update-script"},"Create hot update script"),(0,a.kt)("p",null,"Create the ",(0,a.kt)("inlineCode",{parentName:"p"},"Assets/HotUpdate/Hello.cs")," file with the following code content"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.Collections;\nusing UnityEngine;\n\npublic class Hello\n{\n    public static void Run()\n    {\n        Debug.Log("Hello, HybridCLR");\n    }\n}\n')),(0,a.kt)("p",null,"You might be concerned about whether the hot update code has syntax restrictions like other solutions. HybridCLR is a nearly complete implementation with ",(0,a.kt)("strong",{parentName:"p"},"almost no restrictions")," on hot update code. The very few exceptions can be viewed in ",(0,a.kt)("a",{parentName:"p",href:"/en/docs/basic/notsupportedfeatures"},"Unsupported Features"),"."),(0,a.kt)("h2",{id:"load-hot-update-assembly"},"Load hot update assembly"),(0,a.kt)("p",null,"To simplify the demonstration, we don't download HotUpdate.dll through an HTTP server, but directly place HotUpdate.dll in the StreamingAssets directory."),(0,a.kt)("p",null,"HybridCLR is a native runtime implementation, so calling ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly Assembly.Load(byte[])")," can load hot update assemblies."),(0,a.kt)("p",null,"Create the ",(0,a.kt)("inlineCode",{parentName:"p"},"Assets/LoadDll.cs")," script, then ",(0,a.kt)("strong",{parentName:"p"},"create a GameObject object in the main scene and attach the LoadDll script"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using HybridCLR;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Threading.Tasks;\nusing UnityEngine;\nusing UnityEngine.Networking;\n\npublic class LoadDll : MonoBehaviour\n{\n\n    void Start()\n    {\n      // In Editor environment, HotUpdate.dll.bytes has been automatically loaded, no need to load again, repeated loading will cause problems.\n#if !UNITY_EDITOR\n        Assembly hotUpdateAss = Assembly.Load(File.ReadAllBytes($"{Application.streamingAssetsPath}/HotUpdate.dll.bytes"));\n#else\n      // In Editor environment, no need to load, directly search and get the HotUpdate assembly\n        Assembly hotUpdateAss = System.AppDomain.CurrentDomain.GetAssemblies().First(a => a.GetName().Name == "HotUpdate");\n#endif\n    }\n}\n\n')),(0,a.kt)("h2",{id:"call-hot-update-code"},"Call hot update code"),(0,a.kt)("p",null,"Obviously, the main project cannot directly reference hot update code. There are ",(0,a.kt)("a",{parentName:"p",href:"/en/docs/basic/runhotupdatecodes"},"multiple ways")," to call code in hot update assemblies from the main project. Here we call hot update code through reflection."),(0,a.kt)("p",null,"Add reflection call code after the ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDll.Start")," function. The final code is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'    void Start()\n    {\n      // In Editor environment, HotUpdate.dll.bytes has been automatically loaded, no need to load again, repeated loading will cause problems.\n#if !UNITY_EDITOR\n        Assembly hotUpdateAss = Assembly.Load(File.ReadAllBytes($"{Application.streamingAssetsPath}/HotUpdate.dll.bytes"));\n#else\n      // In Editor environment, no need to load, directly search and get the HotUpdate assembly\n        Assembly hotUpdateAss = System.AppDomain.CurrentDomain.GetAssemblies().First(a => a.GetName().Name == "HotUpdate");\n#endif\n    \n        Type type = hotUpdateAss.GetType("Hello");\n        type.GetMethod("Run").Invoke(null, null);\n    }\n\n')),(0,a.kt)("p",null,"At this point, the entire hot update project creation is complete!!!"),(0,a.kt)("h2",{id:"test-run-in-editor"},"Test run in Editor"),(0,a.kt)("p",null,"Run the main scene, and 'Hello,HybridCLR' will be displayed on the screen, indicating that the code is working properly."),(0,a.kt)("h2",{id:"build-and-run"},"Build and run"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run the menu ",(0,a.kt)("inlineCode",{parentName:"li"},"HybridCLR/Generate/All")," to perform necessary generation operations. ",(0,a.kt)("strong",{parentName:"li"},"This step is essential"),"!!!"),(0,a.kt)("li",{parentName:"ul"},"Copy HotUpdate.dll from the ",(0,a.kt)("inlineCode",{parentName:"li"},"{proj}/HybridCLRData/HotUpdateDlls/StandaloneWindows64")," (or ",(0,a.kt)("inlineCode",{parentName:"li"},"StandaloneMacXxx")," on macOS) directory to ",(0,a.kt)("inlineCode",{parentName:"li"},"Assets/StreamingAssets/HotUpdate.dll.bytes"),". ",(0,a.kt)("strong",{parentName:"li"},"Note")," that you must add the ",(0,a.kt)("inlineCode",{parentName:"li"},".bytes")," suffix!!!"),(0,a.kt)("li",{parentName:"ul"},"Open the ",(0,a.kt)("inlineCode",{parentName:"li"},"Build Settings")," dialog, click ",(0,a.kt)("inlineCode",{parentName:"li"},"Build And Run")," to package and run the hot update example project."),(0,a.kt)("li",{parentName:"ul"},"Open the ",(0,a.kt)("inlineCode",{parentName:"li"},"Build Settings")," dialog, click ",(0,a.kt)("inlineCode",{parentName:"li"},"Build And Run")," to package and run the hot update example project.")),(0,a.kt)("p",null,"If packaging is successful and 'Hello,HybridCLR' is displayed on the screen, it means the hot update code has been executed successfully!"),(0,a.kt)("h2",{id:"test-hot-update"},"Test hot update"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Modify the ",(0,a.kt)("inlineCode",{parentName:"li"},'Debug.Log("Hello, HybridCLR");')," code in the Run function of ",(0,a.kt)("inlineCode",{parentName:"li"},"Assets/HotUpdate/Hello.cs")," to ",(0,a.kt)("inlineCode",{parentName:"li"},'Debug.Log("Hello, World");'),"."),(0,a.kt)("li",{parentName:"ul"},"Run the menu command ",(0,a.kt)("inlineCode",{parentName:"li"},"HybridCLR/CompileDll/ActiveBulidTarget")," to recompile the hot update code."),(0,a.kt)("li",{parentName:"ul"},"Copy the HotUpdate.dll from the ",(0,a.kt)("inlineCode",{parentName:"li"},"{proj}/HybridCLRData/HotUpdateDlls/StandaloneWindows64")," (or ",(0,a.kt)("inlineCode",{parentName:"li"},"StandaloneMacXxx")," on macOS) directory to the packaged output directory as ",(0,a.kt)("inlineCode",{parentName:"li"},"XXX_Data/StreamingAssets/HotUpdate.dll.bytes"),"."),(0,a.kt)("li",{parentName:"ul"},"Re-run the program, and you will see ",(0,a.kt)("inlineCode",{parentName:"li"},"Hello, World")," displayed on the screen, indicating that the hot update code has taken effect!")),(0,a.kt)("p",null,"This completes the hot update experience!!!"))}u.isMDXComponent=!0},95283:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/install_hybridclrunity_package-9a53b1ee8f7ffd8a700ed1f977ca74e3.jpg"},15333:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/player-setting-8e2d11f023bda2ec70c4ddd7f3b1b815.png"},68581:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/select_il2cpp_modules-d895c3fb5390e04b53e40ada2b422239.jpg"},2035:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/settings-d70a8f4ec98d703cc588cc110dc5a57c.jpg"}}]);