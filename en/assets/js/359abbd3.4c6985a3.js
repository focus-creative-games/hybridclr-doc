"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4449],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1172:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const i={},a="Unsupported features",s={unversionedId:"basic/notsupportedfeatures",id:"basic/notsupportedfeatures",title:"Unsupported features",description:"Features that are not in the restrictions are supported by HybridCLR, please don't ask if HybridCLR supports a certain feature.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/basic/notsupportedfeatures.md",sourceDirName:"basic",slug:"/basic/notsupportedfeatures",permalink:"/en/docs/basic/notsupportedfeatures",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Differential Hybrid Execution",permalink:"/en/docs/basic/differentialhybridexecution"},next:{title:"com.code-philosophy.hybridclr",permalink:"/en/docs/basic/com.code-philosophy.hybridclr"}},u={},c=[],l={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"unsupported-features"},"Unsupported features"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Features that are not in the restrictions are supported by HybridCLR, please don't ask if HybridCLR supports a certain feature.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Commercial editions (Professional Edition, Ultimate Edition, hotreload special edition) already support incremental GC. However, the Community Edition does not include this feature."),(0,o.kt)("li",{parentName:"ul"},"Temporarily does not support defining extern functions in hot update scripts, but you can call extern functions in AOT."),(0,o.kt)("li",{parentName:"ul"},"Fully supports the dots technology of 2022, but cannot take advantage of burst acceleration. If the burst part is in the AOT, it is still executed natively; if the burst part is in the hot update part, although the jobs are executed concurrently, they are executed in an interpreted manner."),(0,o.kt)("li",{parentName:"ul"},"Functions that serialize structures such as ",(0,o.kt)("inlineCode",{parentName:"li"},"Marshal.StructureToPtr")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"System.Runtime.InteropServices.Marshal")," are not supported, but ordinary Marshal functions such as ",(0,o.kt)("inlineCode",{parentName:"li"},"Marshal.PtrToStringAnsi")," can work normally."),(0,o.kt)("li",{parentName:"ul"},"[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.xxx)]"," is not supported. It's purely a matter of timing. Unity collects these functions very early, before the hot update dll is loaded. A recommended way is that you use reflection to collect these functions and call them actively at the right time."),(0,o.kt)("li",{parentName:"ul"},"Does not support C# level debugging of the interpreted code part, because there is no time to write a debugger"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"RequireComponent(typeof(AAA))")," requires that AAA must have been instantiated or AddComponent in other resources, otherwise Unity will not recognize AAA as a script and ignore the processing.")))}d.isMDXComponent=!0}}]);