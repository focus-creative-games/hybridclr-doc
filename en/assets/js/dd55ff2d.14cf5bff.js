"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9178],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,y=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,l(l({ref:t},u),{},{components:n})):r.createElement(y,l({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5144:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},l="Quick Start",i={unversionedId:"business/reload/quickstart",id:"business/reload/quickstart",title:"Quick Start",description:"Almost identical to the Quick Start of the Community Edition, this document only highlights the differences.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/business/reload/quickstart.md",sourceDirName:"business/reload",slug:"/business/reload/quickstart",permalink:"/en/docs/business/reload/quickstart",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/en/docs/business/reload/intro"},next:{title:"Hot Reload Technology",permalink:"/en/docs/business/reload/hotreloadassembly"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage in Code",id:"usage-in-code",level:2},{value:"Notes",id:"notes",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(p,(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"Almost identical to the ",(0,a.kt)("a",{parentName:"p",href:"/en/docs/beginner/quickstart"},"Quick Start")," of the Community Edition, this document only highlights the differences."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Extract hybridclr_unity and place it in the project's Packages directory, renaming it to com.code-philosophy.hybridclr."),(0,a.kt)("li",{parentName:"ul"},"Extract the corresponding il2cpp_plus-{version}.zip based on your Unity version."),(0,a.kt)("li",{parentName:"ul"},"Extract hybridclr.zip."),(0,a.kt)("li",{parentName:"ul"},"Place the hybridclr directory from the extracted hybridclr.zip into the libil2cpp directory from the extracted il2cpp-{version}.zip."),(0,a.kt)("li",{parentName:"ul"},"Open ",(0,a.kt)("inlineCode",{parentName:"li"},"HybridCLR/Installer"),", enable the ",(0,a.kt)("inlineCode",{parentName:"li"},"Copy libil2cpp from local")," option, select the libil2cpp directory that was just extracted, and proceed with the installation.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"installer",src:n(9456).Z,width:"805",height:"263"})),(0,a.kt)("h2",{id:"usage-in-code"},"Usage in Code"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"RuntimeApi.UnloadAssembly")," to unload the assembly and ",(0,a.kt)("inlineCode",{parentName:"p"},"Assembly.Load")," to reload the assembly. Currently, reloading the same assembly without unloading it first is not supported. Example code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'    // First load\n    Assembly ass = Assembly.Load(yyy);\n\n    // Execute some code\n    Type mainType = ass.GetType("Entry");\n    mainType.GetMethod("Main").Invoke(null, null);\n\n    // First unload\n    RuntimeApi.UnloadAssembly(ass);\n\n    // Second load\n    Assembly newAss = Assembly.Load(yyy);\n\n    // Execute some code\n    Type mainType = ass.GetType("Entry");\n    mainType.GetMethod("Main").Invoke(null, null);\n\n    // Second unload\n    RuntimeApi.UnloadAssembly(ass);\n')),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"async or coroutine functions easily hold references to unloaded assembly code on other threads, so make sure to clean up all async or coroutine functions before unloading."),(0,a.kt)("li",{parentName:"ul"},"UI OnClick or various callback events easily hold references to unloaded assembly, so make sure to clean them up properly."),(0,a.kt)("li",{parentName:"ul"},"Events or other registrations to the global scope can accidentally hold references to unloaded assembly, so make sure to clean them up properly."),(0,a.kt)("li",{parentName:"ul"},"Based on the logs of illegal references printed in RuntimeApi.UnloadAssembly, clean up all illegal references in the code.")))}d.isMDXComponent=!0},9456:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/ultimate-installer-8a4fc30b6b8adf2de3a8b75efd16894c.jpg"}}]);