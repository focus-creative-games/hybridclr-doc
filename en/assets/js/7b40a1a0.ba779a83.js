"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7453],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>p});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.createContext({}),o=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=o(e.components);return i.createElement(d.Provider,{value:t},e.children)},b="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,d=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),b=o(n),c=a,p=b["".concat(d,".").concat(c)]||b[c]||u[c]||s;return n?i.createElement(p,l(l({ref:t},m),{},{components:n})):i.createElement(p,l({ref:t},m))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,l=new Array(s);l[0]=c;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[b]="string"==typeof e?e:a,l[1]=r;for(var o=2;o<s;o++)l[o]=n[o];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},70795:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>o});var i=n(87462),a=(n(67294),n(3905));const s={},l="Multiple DHE Assemblies",r={unversionedId:"business/ultimate/multidheassemblies",id:"version-7.10.0/business/ultimate/multidheassemblies",title:"Multiple DHE Assemblies",description:"When multiple DHE assemblies exist, the decision to call LoadOriginalDifferentialHybridAssembly or LoadDifferentialHybridAssemblyUnchecked for loading depends on whether each assembly has changed.",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-7.10.0/business/ultimate/multidheassemblies.md",sourceDirName:"business/ultimate",slug:"/business/ultimate/multidheassemblies",permalink:"/en/docs/7.10.0/business/ultimate/multidheassemblies",draft:!1,tags:[],version:"7.10.0",frontMatter:{}},d={},o=[{value:"Restrictions",id:"restrictions",level:2},{value:"Transitivity of LoadDifferentialHybridAssemblyUnchecked",id:"transitivity-of-loaddifferentialhybridassemblyunchecked",level:2},{value:"Computing DHE Assemblies That Need to Be Loaded Using LoadDifferentialHybridAssemblyUnchecked",id:"computing-dhe-assemblies-that-need-to-be-loaded-using-loaddifferentialhybridassemblyunchecked",level:2},{value:"Example Code",id:"example-code",level:3}],m={toc:o},b="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(b,(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"multiple-dhe-assemblies"},"Multiple DHE Assemblies"),(0,a.kt)("p",null,"When multiple DHE assemblies exist, the decision to call ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadOriginalDifferentialHybridAssembly")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked")," for loading depends on whether each assembly has changed.\nHowever, there are some additional restrictions."),(0,a.kt)("h2",{id:"restrictions"},"Restrictions"),(0,a.kt)("p",null,"Loading multiple DHE assemblies must meet the following conditions:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Assemblies must be loaded in the order of their dependencies."),(0,a.kt)("li",{parentName:"ul"},"If a DHE assembly is loaded using ",(0,a.kt)("inlineCode",{parentName:"li"},"LoadDifferentialHybridAssemblyUnchecked"),", then all DHE assemblies that directly or indirectly depend on it must also be loaded using ",(0,a.kt)("inlineCode",{parentName:"li"},"LoadDifferentialHybridAssemblyUnchecked"),", ",(0,a.kt)("strong",{parentName:"li"},"even if those assemblies have not changed"),".")),(0,a.kt)("h2",{id:"transitivity-of-loaddifferentialhybridassemblyunchecked"},"Transitivity of LoadDifferentialHybridAssemblyUnchecked"),(0,a.kt)("p",null,"Due to some complex implementation reasons, if a DHE assembly is loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked"),", then all DHE assemblies that directly or indirectly depend on it must also be loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked"),"."),(0,a.kt)("p",null,"For example, suppose Assembly B references Assembly A:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Assembly"),(0,a.kt)("th",{parentName:"tr",align:null},"Loading Method"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"A"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"LoadOriginalDifferentialHybridAssembly"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"B"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"LoadOriginalDifferentialHybridAssembly")," or ",(0,a.kt)("inlineCode",{parentName:"td"},"LoadDifferentialHybridAssemblyUnchecked"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"A (Changed)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"LoadDifferentialHybridAssemblyUnchecked"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"B (Must Use)"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"LoadDifferentialHybridAssemblyUnchecked"))))),(0,a.kt)("p",null,"If Assembly A changes, then even if Assembly B has not been modified, it must still be loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked"),"."),(0,a.kt)("h2",{id:"computing-dhe-assemblies-that-need-to-be-loaded-using-loaddifferentialhybridassemblyunchecked"},"Computing DHE Assemblies That Need to Be Loaded Using LoadDifferentialHybridAssemblyUnchecked"),(0,a.kt)("p",null,"Suppose you have multiple DHE assemblies A1 to An. If only A1 and A3 change in a certain update, it is not enough to load just these two assemblies using ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked"),".\nAll assemblies that directly or indirectly depend on A1 and A3 must also be loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked"),". When the number of assemblies is small, this is manageable manually, but when dealing with a large number of assemblies, it is easy to make mistakes."),(0,a.kt)("p",null,"Starting from version v7.5.0, a new function ",(0,a.kt)("inlineCode",{parentName:"p"},"HybridCLR.Editor.DHE.BuildUtils::ComputeAssembliesLoadedByLoadDifferentialHybridAssembly")," has been added to compute the final list of DHE assemblies that need to be loaded using ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadDifferentialHybridAssemblyUnchecked")," based on the list of known changed DHE assemblies."),(0,a.kt)("h3",{id:"example-code"},"Example Code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'BuildTarget target = EditorUserBuildSettings.activeBuildTarget;\nHybridCLRSettings settings = HybridCLRSettings.Instance;\nstring[] differentialHybridAssemblyList = settings.differentialHybridAssemblies;\n\nstring currentAssemblyDir = SettingsUtil.GetHotUpdateDllsOutputDirByTarget(target);\n\nvar assList = BuildUtils.ComputeAssembliesLoadedByLoadDifferentialHybridAssembly(new string[] { "MyCode" }, differentialHybridAssemblyList, currentAssemblyDir);\nforeach (var ass in assList)\n{\n    Debug.Log($"assembly:{ass}");\n}\n')))}u.isMDXComponent=!0}}]);