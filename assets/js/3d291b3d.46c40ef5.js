"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9822],{3905:(n,a,e)=>{e.d(a,{Zo:()=>o,kt:()=>m});var d=e(7294);function c(n,a,e){return a in n?Object.defineProperty(n,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[a]=e,n}function b(n,a){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(n);a&&(d=d.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),e.push.apply(e,d)}return e}function t(n){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?b(Object(e),!0).forEach((function(a){c(n,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):b(Object(e)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(e,a))}))}return n}function i(n,a){if(null==n)return{};var e,d,c=function(n,a){if(null==n)return{};var e,d,c={},b=Object.keys(n);for(d=0;d<b.length;d++)e=b[d],a.indexOf(e)>=0||(c[e]=n[e]);return c}(n,a);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(n);for(d=0;d<b.length;d++)e=b[d],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(c[e]=n[e])}return c}var l=d.createContext({}),r=function(n){var a=d.useContext(l),e=a;return n&&(e="function"==typeof n?n(a):t(t({},a),n)),e},o=function(n){var a=r(n.components);return d.createElement(l.Provider,{value:a},n.children)},u="mdxType",s={inlineCode:"code",wrapper:function(n){var a=n.children;return d.createElement(d.Fragment,{},a)}},p=d.forwardRef((function(n,a){var e=n.components,c=n.mdxType,b=n.originalType,l=n.parentName,o=i(n,["components","mdxType","originalType","parentName"]),u=r(e),p=c,m=u["".concat(l,".").concat(p)]||u[p]||s[p]||b;return e?d.createElement(m,t(t({ref:a},o),{},{components:e})):d.createElement(m,t({ref:a},o))}));function m(n,a){var e=arguments,c=a&&a.mdxType;if("string"==typeof n||c){var b=e.length,t=new Array(b);t[0]=p;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=n,i[u]="string"==typeof n?n:c,t[1]=i;for(var r=2;r<b;r++)t[r]=e[r];return d.createElement.apply(null,t)}return d.createElement.apply(null,e)}p.displayName="MDXCreateElement"},1382:(n,a,e)=>{e.r(a),e.d(a,{assets:()=>l,contentTitle:()=>t,default:()=>s,frontMatter:()=>b,metadata:()=>i,toc:()=>r});var d=e(7462),c=(e(7294),e(3905));const b={},t="\u6267\u884c\u6027\u80fd",i={unversionedId:"basic/performance",id:"basic/performance",title:"\u6267\u884c\u6027\u80fd",description:"\u867d\u7136HybridCLR\u4e5f\u662f\u89e3\u91ca\u6267\u884c\uff0c\u4f46\u65e0\u8bba\u4ece\u7406\u8bba\u539f\u7406\u8fd8\u662f\u771f\u673a\u6d4b\u8bd5\u6570\u636e\u8868\u660e\uff0cHybridCLR\u76f8\u6bd4\u5f53\u524d\u6d41\u884c\u7684lua\u3001ILRuntime\u4e4b\u7c7b\u7684\u70ed\u66f4\u65b0\u65b9\u6848\uff0c\u6027\u80fd\u6709\u6781\u5927\u7684\u63d0\u5347(\u6570\u500d\u751a\u81f3\u6570\u5341\u500d)\u3002",source:"@site/docs/basic/performance.md",sourceDirName:"basic",slug:"/basic/performance",permalink:"/docs/basic/performance",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5185\u5b58\u4e0eGC",permalink:"/docs/basic/memory"},next:{title:"\u4e0d\u652f\u6301\u7684\u7279\u6027",permalink:"/docs/basic/notsupportedfeatures"}},l={},r=[{value:"\u6d4b\u8bd5\u62a5\u544a",id:"\u6d4b\u8bd5\u62a5\u544a",level:2},{value:"HybridCLR\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6 vs xlua\u8017\u65f6",id:"hybridclr\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6-vs-xlua\u8017\u65f6",level:3},{value:"HybridCLR\u5546\u4e1a\u5316\u7248\u672c/xlua \u6027\u80fd\u500d\u7387",id:"hybridclr\u5546\u4e1a\u5316\u7248\u672cxlua-\u6027\u80fd\u500d\u7387",level:3},{value:"AOT\u8017\u65f6 vs \u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6 vs \u793e\u533a\u7248\u672c\u8017\u65f6 \uff08\u8d8a\u5c0f\u8d8a\u597d\uff09",id:"aot\u8017\u65f6-vs-\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6-vs-\u793e\u533a\u7248\u672c\u8017\u65f6-\u8d8a\u5c0f\u8d8a\u597d",level:3},{value:"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6/AOT\u8017\u65f6 vs \u793e\u533a\u7248\u672c\u8017\u65f6/AOT\u8017\u65f6  \uff08\u8d8a\u5c0f\u8d8a\u597d\uff09",id:"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6aot\u8017\u65f6-vs-\u793e\u533a\u7248\u672c\u8017\u65f6aot\u8017\u65f6--\u8d8a\u5c0f\u8d8a\u597d",level:3},{value:"\u5546\u4e1a\u5316\u7248\u672c\u6027\u80fd/\u793e\u533a\u7248\u672c\u6027\u80fd \uff08\u8d8a\u5927\u8d8a\u597d\uff09",id:"\u5546\u4e1a\u5316\u7248\u672c\u6027\u80fd\u793e\u533a\u7248\u672c\u6027\u80fd-\u8d8a\u5927\u8d8a\u597d",level:3},{value:"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6/AOT\u7248\u672c\u8017\u65f6 \uff08\u8d8a\u5c0f\u8d8a\u597d\uff09",id:"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6aot\u7248\u672c\u8017\u65f6-\u8d8a\u5c0f\u8d8a\u597d",level:3},{value:"\u539f\u7406",id:"\u539f\u7406",level:2},{value:"\u91cd\u5199\u7684\u7cbe\u7b80\u9ad8\u6548\u7684metadata\u89e3\u6790\u5e93",id:"\u91cd\u5199\u7684\u7cbe\u7b80\u9ad8\u6548\u7684metadata\u89e3\u6790\u5e93",level:3},{value:"\u4f7f\u7528\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6",id:"\u4f7f\u7528\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6",level:3},{value:"\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u6808\u548c\u6267\u884c\u6808",id:"\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u6808\u548c\u6267\u884c\u6808",level:3},{value:"\u6307\u4ee4\u9759\u6001\u7279\u4f8b\u5316",id:"\u6307\u4ee4\u9759\u6001\u7279\u4f8b\u5316",level:3},{value:"\u63d0\u524d\u8ba1\u7b97\u597d\u9700\u8981resolve\u7684\u8fd0\u884c\u65f6\u5143\u6570\u636e",id:"\u63d0\u524d\u8ba1\u7b97\u597d\u9700\u8981resolve\u7684\u8fd0\u884c\u65f6\u5143\u6570\u636e",level:3},{value:"\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u6307\u4ee4\u5b9e\u73b0\u7b80\u5355\u9ad8\u6548",id:"\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u6307\u4ee4\u5b9e\u73b0\u7b80\u5355\u9ad8\u6548",level:3},{value:"\u76f4\u63a5\u652f\u6301\u5f15\u7528\u4e0e\u6307\u9488\u64cd\u4f5c\uff0c\u65e0\u9700\u901a\u8fc7\u95f4\u63a5\u65b9\u6cd5",id:"\u76f4\u63a5\u652f\u6301\u5f15\u7528\u4e0e\u6307\u9488\u64cd\u4f5c\u65e0\u9700\u901a\u8fc7\u95f4\u63a5\u65b9\u6cd5",level:3},{value:"\u5143\u6570\u636e\u7edf\u4e00\uff0c\u521b\u5efa\u5bf9\u8c61\u66f4\u9ad8\u6548\uff0c\u5185\u5b58\u5360\u7528\u4e5f\u66f4\u5c0f",id:"\u5143\u6570\u636e\u7edf\u4e00\u521b\u5efa\u5bf9\u8c61\u66f4\u9ad8\u6548\u5185\u5b58\u5360\u7528\u4e5f\u66f4\u5c0f",level:3},{value:"\u5143\u6570\u636e\u7edf\u4e00\uff0c\u51fd\u6570\u8c03\u7528\u65b9\u5f0f\u7edf\u4e00\uff0c\u5e76\u4e14\u6ca1\u6709PInvoke\u548cReservePInvoke\u7684\u989d\u5916\u5f00\u9500",id:"\u5143\u6570\u636e\u7edf\u4e00\u51fd\u6570\u8c03\u7528\u65b9\u5f0f\u7edf\u4e00\u5e76\u4e14\u6ca1\u6709pinvoke\u548creservepinvoke\u7684\u989d\u5916\u5f00\u9500",level:3},{value:"\u989d\u5916\u63d0\u4f9b\u5927\u91cfinstinct\u51fd\u6570",id:"\u989d\u5916\u63d0\u4f9b\u5927\u91cfinstinct\u51fd\u6570",level:3},{value:"\u4e25\u683c\u9075\u5faa\u89c4\u8303\uff0c\u4e0d\u5f15\u5165\u989d\u5916\u4e0d\u5fc5\u8981\u6210\u672c",id:"\u4e25\u683c\u9075\u5faa\u89c4\u8303\u4e0d\u5f15\u5165\u989d\u5916\u4e0d\u5fc5\u8981\u6210\u672c",level:3},{value:"\u5176\u4ed6\u6307\u4ee4\u4f18\u5316\u6280\u672f",id:"\u5176\u4ed6\u6307\u4ee4\u4f18\u5316\u6280\u672f",level:3},{value:"\u9644\u5f55\uff1a\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801",id:"\u9644\u5f55\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801",level:2}],o={toc:r},u="wrapper";function s(n){let{components:a,...b}=n;return(0,c.kt)(u,(0,d.Z)({},o,b,{components:a,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"\u6267\u884c\u6027\u80fd"},"\u6267\u884c\u6027\u80fd"),(0,c.kt)("p",null,"\u867d\u7136HybridCLR\u4e5f\u662f\u89e3\u91ca\u6267\u884c\uff0c\u4f46\u65e0\u8bba\u4ece\u7406\u8bba\u539f\u7406\u8fd8\u662f\u771f\u673a\u6d4b\u8bd5\u6570\u636e\u8868\u660e\uff0cHybridCLR\u76f8\u6bd4\u5f53\u524d\u6d41\u884c\u7684lua\u3001ILRuntime\u4e4b\u7c7b\u7684\u70ed\u66f4\u65b0\u65b9\u6848\uff0c\u6027\u80fd\u6709\u6781\u5927\u7684\u63d0\u5347(\u6570\u500d\u751a\u81f3\u6570\u5341\u500d)\u3002"),(0,c.kt)("h2",{id:"\u6d4b\u8bd5\u62a5\u544a"},"\u6d4b\u8bd5\u62a5\u544a"),(0,c.kt)("p",null,"HybridCLR\u5546\u4e1a\u5316\u7248\u672c\u7684\u6027\u80fd",(0,c.kt)("strong",{parentName:"p"},"\u5168\u9762\u78be\u538b"),"\u4e86xlua\u65b9\u6848\uff0c\u6570\u503c\u8ba1\u7b97\u6307\u4ee4\u6027\u80fd\u662fxlua\u7684651%-720%\uff0c\u5176\u4ed6\u65b9\u9762\u6570\u5341\u500d\u751a\u81f3\u767e\u500d\u4ee5\u4e0a\u5feb\u4e8exlua\u65b9\u6848\u3002"),(0,c.kt)("p",null,"\u793e\u533a\u7248\u672c\u7684HybridCLR\u9664\u4e86",(0,c.kt)("strong",{parentName:"p"},"\u6570\u503c\u8ba1\u7b97"),"\u8ddfAOT\u6709\u8f83\u660e\u663e\u5dee\u8ddd\u5916\uff0c\u5176\u4ed6\u65b9\u9762\u5dee\u8ddd\u4e0d\u5927\u3002\u56e0\u6b64\u5bf9\u4e8e\u5927\u591a\u6570\u9879\u76ee\u6765\u8bf4\uff0c\u6e38\u620f\u7efc\u5408\u6027\u80fd\u8ddf\u5168\u539f\u751f\u7248\u672c\u5dee\u8ddd\u4e0d\u5927\u3002"),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"\u5546\u4e1a\u7248\u672c"),"\u7684HybridCLR\u5927\u5e45\u4f18\u5316\u4e86\u6570\u503c\u8ba1\u7b97\u6027\u80fd\uff0c\u6027\u80fd\u662f\u793e\u533a\u7248\u672c\u7684280%-735%\uff0c\u5bf9\u6027\u80fd\u6709\u4e25\u82db\u8981\u6c42\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u8054\u7cfb\u6211\u4eec",(0,c.kt)("a",{parentName:"p",href:"/docs/business/intro"},"\u5546\u4e1a\u5316\u670d\u52a1"),"\u3002"),(0,c.kt)("p",null,"\u4ee5\u4e0b\u662fOnePlus 9R ArmV8 \u5b9e\u673a\u6d4b\u8bd5\u62a5\u544a\uff0c\u6d4b\u8bd5\u4ee3\u7801\u9644\u5f55\u6700\u540e\u3002"),(0,c.kt)("h3",{id:"hybridclr\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6-vs-xlua\u8017\u65f6"},"HybridCLR\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6 vs xlua\u8017\u65f6"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"data",src:e(7860).Z,width:"972",height:"558"})),(0,c.kt)("h3",{id:"hybridclr\u5546\u4e1a\u5316\u7248\u672cxlua-\u6027\u80fd\u500d\u7387"},"HybridCLR\u5546\u4e1a\u5316\u7248\u672c/xlua \u6027\u80fd\u500d\u7387"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"data",src:e(1024).Z,width:"972",height:"527"})),(0,c.kt)("h3",{id:"aot\u8017\u65f6-vs-\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6-vs-\u793e\u533a\u7248\u672c\u8017\u65f6-\u8d8a\u5c0f\u8d8a\u597d"},"AOT\u8017\u65f6 vs \u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6 vs \u793e\u533a\u7248\u672c\u8017\u65f6 \uff08\u8d8a\u5c0f\u8d8a\u597d\uff09"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"data",src:e(5108).Z,width:"1361",height:"628"})),(0,c.kt)("h3",{id:"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6aot\u8017\u65f6-vs-\u793e\u533a\u7248\u672c\u8017\u65f6aot\u8017\u65f6--\u8d8a\u5c0f\u8d8a\u597d"},"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6/AOT\u8017\u65f6 vs \u793e\u533a\u7248\u672c\u8017\u65f6/AOT\u8017\u65f6  \uff08\u8d8a\u5c0f\u8d8a\u597d\uff09"),(0,c.kt)("p",null,"AOT\u7248\u672c\u6027\u80fd\u662f\u793e\u533a\u7248\u672c\u7684",(0,c.kt)("inlineCode",{parentName:"p"},"4.1 - 90"),"\u500d\uff0c\u662f\u5546\u4e1a\u5316\u7248\u672c\u7684",(0,c.kt)("inlineCode",{parentName:"p"},"1.30 - 12.9"),"\u500d\u3002"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"data",src:e(9446).Z,width:"1283",height:"647"})),(0,c.kt)("h3",{id:"\u5546\u4e1a\u5316\u7248\u672c\u6027\u80fd\u793e\u533a\u7248\u672c\u6027\u80fd-\u8d8a\u5927\u8d8a\u597d"},"\u5546\u4e1a\u5316\u7248\u672c\u6027\u80fd/\u793e\u533a\u7248\u672c\u6027\u80fd \uff08\u8d8a\u5927\u8d8a\u597d\uff09"),(0,c.kt)("p",null,"\u5546\u4e1a\u5316\u7248\u672c\u6027\u80fd\u662f\u793e\u533a\u7248\u672c\u7684",(0,c.kt)("inlineCode",{parentName:"p"},"2.87-7.35"),"\u500d\u3002"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"data",src:e(9672).Z,width:"1280",height:"527"})),(0,c.kt)("h3",{id:"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6aot\u7248\u672c\u8017\u65f6-\u8d8a\u5c0f\u8d8a\u597d"},"\u5546\u4e1a\u5316\u7248\u672c\u8017\u65f6/AOT\u7248\u672c\u8017\u65f6 \uff08\u8d8a\u5c0f\u8d8a\u597d\uff09"),(0,c.kt)("p",null,"AOT\u7248\u672c\u6027\u80fd\u662f\u662f\u5546\u4e1a\u5316\u7248\u672c\u7684",(0,c.kt)("inlineCode",{parentName:"p"},"1.30 - 12.9"),"\u500d\u3002"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"data",src:e(9999).Z,width:"1280",height:"640"})),(0,c.kt)("h2",{id:"\u539f\u7406"},"\u539f\u7406"),(0,c.kt)("p",null,"\u7531\u4e8eHybridCLR\u7528C++\u5b9e\u73b0\uff0c\u5e76\u4e14\u76f4\u63a5\u4e0eil2cpp\u8fd0\u884c\u65f6\u65e0\u7f1d\u96c6\u6210\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8fd0\u884c\u65f6\u5e95\u5c42\u7684\u6570\u636e\u548c\u5404\u79cd\u63a5\u53e3\u3002\u76f8\u6bd4\u4e0eILRuntime\u548cXlua\uff0c\u7701\u53bbC#\u5c42\u7684\u989d\u5916\u6210\u672c\uff0c\u4ea4\u4e92\u6210\u672c\u6781\u5927\u964d\u4f4e\u3002"),(0,c.kt)("p",null,"HybridCLR\u6027\u80fd\u4f18\u79c0\u4e3b\u8981\u6765\u81ea\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a"),(0,c.kt)("h3",{id:"\u91cd\u5199\u7684\u7cbe\u7b80\u9ad8\u6548\u7684metadata\u89e3\u6790\u5e93"},"\u91cd\u5199\u7684\u7cbe\u7b80\u9ad8\u6548\u7684metadata\u89e3\u6790\u5e93"),(0,c.kt)("p",null,"\u6211\u4eec\u6ca1\u6709\u4f7f\u7528\u73b0\u6210\u7684metadata\u89e3\u6790\u5e93\uff0c\u6309\u7167HybridCLR\u9700\u6c42\u5b9e\u73b0\u4e86\u4e00\u4e2aC++\u7248\u672c\u7684\u7cbe\u7b80\u9ad8\u6548\u7684metadata\n\u89e3\u6790\u5e93\u3002\u800c\u5176\u4ed6C#\u70ed\u66f4\u65b0\u6216\u8005hotfix\u65b9\u6848\u5747\u7528\u4e86Cecil\u4e4b\u7c7b\u7684C#\u5e93\uff0c\u5185\u5b58\u548c\u52a0\u8f7d\u6548\u7387\u5dee\u8ddd\u5de8\u5927\uff01"),(0,c.kt)("h3",{id:"\u4f7f\u7528\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6"},"\u4f7f\u7528\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6"),(0,c.kt)("p",null,"\u539f\u59cbIL\u5b57\u8282\u7801\u662f\u57fa\u4e8e\u6808\u7684\u6307\u4ee4\u96c6\uff0cHybridCLR\u5c06\u5176\u8f6c\u6210\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\uff0c\u51cf\u5c11\u4e86\u6808\u7ef4\u62a4\u5f00\u9500\u3002"),(0,c.kt)("h3",{id:"\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u6808\u548c\u6267\u884c\u6808"},"\u76f4\u63a5\u8bbf\u95ee\u6570\u636e\u6808\u548c\u6267\u884c\u6808"),(0,c.kt)("p",null,"\u6808\u64cd\u4f5c\u662fCLI\u4e2d\u6700\u5e38\u89c1\u7684\u64cd\u4f5c\uff0c\u51e0\u4e4e\u6240\u6709\u6307\u4ee4\u90fd\u4f1a\u6d89\u53ca\u5230\u6808\u64cd\u4f5c\u3002\u7531\u4e8e\u89e3\u91ca\u5668\u6808\u662f\u81ea\u5df1\u7ef4\u62a4\u7684\u5806\u5185\u5b58\uff0cCLI\u5bf9struct\u7684\u6307\u9488\u64cd\u4f5c\u6709\u9650\u5236\uff0c\u5982\u679c\u7528C#\u5b9e\u73b0\u89e3\u91ca\u5668\uff0c\n\u5219\u65e0\u6cd5\u76f4\u63a5\u5728\u89e3\u91ca\u5668\u6808\u4e0a\u64cd\u4f5c\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u4f7f\u7528\u5404\u79cd\u6280\u5de7\u95f4\u63a5\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002\u800cHybridCLR\u662fC++\u5b9e\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u3002"),(0,c.kt)("p",null,"\u64cd\u4f5cstruct\u7c7b\u578b\u6548\u7387\u76f8\u6bd4\u5176\u4ed6\u89e3\u91ca\u5668\u6709\u6570\u500d\u5230\u6570\u5341\u500d\u63d0\u5347\u3002"),(0,c.kt)("h3",{id:"\u6307\u4ee4\u9759\u6001\u7279\u4f8b\u5316"},"\u6307\u4ee4\u9759\u6001\u7279\u4f8b\u5316"),(0,c.kt)("p",null,"\u6709\u4e00\u4e9b\u6307\u4ee4\u5982",(0,c.kt)("inlineCode",{parentName:"p"},"add"),"\u6307\u4ee4\u662f\u591a\u529f\u80fd\u6307\u4ee4\uff0c\u6839\u636e\u5f53\u524d\u6808\u4e0a\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\u6765\u51b3\u5b9a\u6700\u7ec8\u7684\u64cd\u4f5c\u3002HybridCLR\u4e3a\u5b83\u8bbe\u8ba1\u4e86",(0,c.kt)("inlineCode",{parentName:"p"},"add_i4\u3001add_i8\u3001add_r4\u3001add_r8"),"\u8fd94\u6761\u6307\u4ee4\uff0c\u7ffb\u8bd1\u6307\u4ee4\u65f6\n\u8ba1\u7b97\u51fa\u5f53\u524d\u5806\u6808\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7ffb\u8bd1\u4e3a\u5bf9\u5e94\u7684\u7279\u4f8b\u5316\u5316\u6307\u4ee4\u3002\u8282\u7701\u4e86\u8fd0\u884c\u65f6\u5224\u65ad\u7c7b\u578b\u7684\u5f00\u9500\uff0c\u4e5f\u8282\u7701\u4e86\u8fd0\u884c\u65f6\u7ef4\u62a4\u6570\u636e\u7c7b\u578b\u7684\u5f00\u9500\u3002"),(0,c.kt)("h3",{id:"\u63d0\u524d\u8ba1\u7b97\u597d\u9700\u8981resolve\u7684\u8fd0\u884c\u65f6\u5143\u6570\u636e"},"\u63d0\u524d\u8ba1\u7b97\u597d\u9700\u8981resolve\u7684\u8fd0\u884c\u65f6\u5143\u6570\u636e"),(0,c.kt)("p",null,"\u6709\u4e9b\u6307\u4ee4\u5982ldtoken\u3001ldstr\u4e4b\u7c7b\u9700\u8981\u8fd0\u884c\u65f6\u5c06\u6307\u4ee4\u4e2d\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u5b9e\u9645\u5730\u8fd0\u884c\u65f6\u6570\u636e\u3002HybridCLR\u5728\u7ffb\u8bd1\u65f6\u76f4\u63a5\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u8fd0\u884c\u65f6\u6570\u636e\uff0c\u4fdd\u5b58\u5230\u8f6c\u6362\u540e\u7684\u6307\u4ee4\u4e2d\uff0c\n\u6781\u5927\u63d0\u5347\u4e86\u6027\u80fd"),(0,c.kt)("h3",{id:"\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u6307\u4ee4\u5b9e\u73b0\u7b80\u5355\u9ad8\u6548"},"\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u6307\u4ee4\u5b9e\u73b0\u7b80\u5355\u9ad8\u6548"),(0,c.kt)("p",null,"\u50cf ",(0,c.kt)("inlineCode",{parentName:"p"},"v.x = b;")," \u8fd9\u79cd\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u6307\u4ee4\u975e\u5e38\u5e38\u89c1\uff0c\u50cfILRuntime\u548cxlua\u7531\u4e8eC#\u8bed\u8a00\u9650\u5236\uff0c\u4e0d\u5f97\u4e0d\u901a\u8fc7\u4e00\u4e2awrap\u51fd\u6570\u8c03\u7528\u8fdb\u884c\u64cd\u4f5c\u3002\u800cHybridCLR\u7531\u4e8e\u7528C++\u5b9e\u73b0\uff0c\u80fd\u76f4\u63a5\u8bbf\u95ee\n\u5bf9\u8c61\u7684\u5185\u5b58\u6570\u636e\uff0c\u901a\u8fc7\u63d0\u524d\u8ba1\u7b97\u5b57\u6bb5\u5728\u5bf9\u8c61\u4e2d\u7684\u504f\u79fb\uff0c\u76f4\u63a5 ",(0,c.kt)("inlineCode",{parentName:"p"},"*(int32_t*)(obj + offset) = b;")," \u5c31\u80fd\u5b8c\u6210\u8fd9\u4e2a\u8bbf\u95ee\u64cd\u4f5c\u3002"),(0,c.kt)("p",null,"\u76f8\u6bd4\u5176\u4ed6\u70ed\u66f4\u65b0\u65b9\u6848\u6570\u51e0\u5341\u500d\u5730\u63d0\u5347\u4e86\u6548\u7387\u3002"),(0,c.kt)("h3",{id:"\u76f4\u63a5\u652f\u6301\u5f15\u7528\u4e0e\u6307\u9488\u64cd\u4f5c\u65e0\u9700\u901a\u8fc7\u95f4\u63a5\u65b9\u6cd5"},"\u76f4\u63a5\u652f\u6301\u5f15\u7528\u4e0e\u6307\u9488\u64cd\u4f5c\uff0c\u65e0\u9700\u901a\u8fc7\u95f4\u63a5\u65b9\u6cd5"),(0,c.kt)("p",null,"\u7531\u4e8eCLI\u7684\u89c4\u8303\u9650\u5236\uff0c\u5728C#\u4e2d\u5f15\u7528\u53ea\u80fd\u653e\u5230\u6258\u7ba1\u6808\u4e0a\uff0c\u800c\u4e0d\u80fd\u5b58\u653e\u5230\u89e3\u91ca\u5668\u6808\u4e0a(\u56e0\u4e3a\u662f\u5806\u5185\u5b58)\u3002\u4e3a\u4e86\u5904\u7406 ",(0,c.kt)("inlineCode",{parentName:"p"},"ref int a = ref b; a = 5;")," \u4e4b\u7c7b\u7684\u4ee3\u7801\uff0c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u975e\u5e38\u590d\u6742\u7684\n\u6280\u5de7\u95f4\u63a5\u5730\u7ef4\u62a4\u8fd9\u4e2a\u5f15\u7528\u3002\u800cHybridCLR\u4f7f\u7528c++\u5b9e\u73b0\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u548c\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u3002"),(0,c.kt)("p",null,"\u76f8\u6bd4\u5176\u4ed6\u70ed\u66f4\u65b0\u65b9\u6848\u6548\u7387\u6781\u5927\u63d0\u5347\u3002"),(0,c.kt)("h3",{id:"\u5143\u6570\u636e\u7edf\u4e00\u521b\u5efa\u5bf9\u8c61\u66f4\u9ad8\u6548\u5185\u5b58\u5360\u7528\u4e5f\u66f4\u5c0f"},"\u5143\u6570\u636e\u7edf\u4e00\uff0c\u521b\u5efa\u5bf9\u8c61\u66f4\u9ad8\u6548\uff0c\u5185\u5b58\u5360\u7528\u4e5f\u66f4\u5c0f"),(0,c.kt)("p",null,"\u7531\u4e8e\u5143\u6570\u636e\u7edf\u4e00\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528il2cpp::vm::Object::New\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u6548\u7387\u8ddf\u539f\u751f\u975e\u5e38\u63a5\u8fd1\uff0c\u800c\u4e14\u5185\u5b58\u5b8c\u5168\u76f8\u540c\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5176\u4ed6\u70ed\u66f4\u65b0\u65b9\u6848\u4f7f\u7528\u5047\u7c7b\u578b\uff0c\n\u5bf9\u8c61\u81c3\u80bf\uff0c\u521b\u5efa\u5bf9\u8c61\u7684\u8fc7\u7a0b\u66f4\u91cd\u5ea6\u590d\u6742\u3002"),(0,c.kt)("p",null,"\u76f8\u6bd4\u5176\u4ed6\u70ed\u66f4\u65b0\u65b9\u6848\u6781\u5927\u63d0\u5347\u4e86\u6548\u7387\u3002"),(0,c.kt)("h3",{id:"\u5143\u6570\u636e\u7edf\u4e00\u51fd\u6570\u8c03\u7528\u65b9\u5f0f\u7edf\u4e00\u5e76\u4e14\u6ca1\u6709pinvoke\u548creservepinvoke\u7684\u989d\u5916\u5f00\u9500"},"\u5143\u6570\u636e\u7edf\u4e00\uff0c\u51fd\u6570\u8c03\u7528\u65b9\u5f0f\u7edf\u4e00\uff0c\u5e76\u4e14\u6ca1\u6709PInvoke\u548cReservePInvoke\u7684\u989d\u5916\u5f00\u9500"),(0,c.kt)("p",null,"HybridCLR\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 \u7531IL\u51fd\u6570\u7ffb\u8bd1\u540e\u7684c++\u51fd\u6570\uff0c\u6ca1\u6709\u4efb\u4f55\u4e2d\u95f4\u73af\u8282\uff0c\u800cILRuntime\u548cxlua\u9700\u8981\u5404\u79cd\u590d\u6742\u7684\u5224\u5b9a\u548c\u53c2\u6570\u8f6c\u6362\u4ee5\u53ca\u4e0eC#\u4e4b\u95f4PInvoke\u548cReservePInvoke\u5e26\u6765\u989d\u5916\u5927\u91cf\u5f00\u9500\u3002"),(0,c.kt)("p",null,"HybridCLR\u4e0eil2cpp AOT\u90e8\u5206\u4ea4\u4e92\u6781\u5176\u8f7b\u91cf\u9ad8\u6548\u3002\u4e0d\u518d\u6709\u6027\u80fd\u95ee\u9898\u3002"),(0,c.kt)("h3",{id:"\u989d\u5916\u63d0\u4f9b\u5927\u91cfinstinct\u51fd\u6570"},"\u989d\u5916\u63d0\u4f9b\u5927\u91cfinstinct\u51fd\u6570"),(0,c.kt)("p",null,"\u50cf ",(0,c.kt)("inlineCode",{parentName:"p"},"new Vector{2,3,4}"),"\u3001",(0,c.kt)("inlineCode",{parentName:"p"},"new string()"),"\u3001",(0,c.kt)("inlineCode",{parentName:"p"},"Nullable<T>.Value")," \u7b49\u7b49\u7684\u5e38\u7528\u64cd\u4f5c\uff0c\u6211\u4eec\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u6307\u4ee4\uff0c\u8fd0\u884c\u5f00\u9500\u751a\u81f3\u4f4e\u4e8eAOT\u7684\u5b9e\u73b0\u3002"),(0,c.kt)("p",null,"\u76f8\u6bd4\u5176\u4ed6\u70ed\u66f4\u65b0\u65b9\u6848\u6570\u51e0\u5341\u500d\u5730\u63d0\u5347\u4e86\u6548\u7387\u3002"),(0,c.kt)("h3",{id:"\u4e25\u683c\u9075\u5faa\u89c4\u8303\u4e0d\u5f15\u5165\u989d\u5916\u4e0d\u5fc5\u8981\u6210\u672c"},"\u4e25\u683c\u9075\u5faa\u89c4\u8303\uff0c\u4e0d\u5f15\u5165\u989d\u5916\u4e0d\u5fc5\u8981\u6210\u672c"),(0,c.kt)("p",null,"\u7531\u4e8e\u7cbe\u5fc3\u7684\u8bbe\u8ba1\u548c\u4f18\u5316\uff0cHybridCLR\u5c3d\u91cf\u89c4\u907f\u5404\u79cd\u4e0d\u5fc5\u8981\u7684\u5f00\u9500\u3002\u4f8b\u5982\u6267\u884c\u8fc7\u7a0b\u7684GC\u4e0e\u539f\u751fil2cpp\u53camono\u5b8c\u5168\u76f8\u540c\u3002"),(0,c.kt)("h3",{id:"\u5176\u4ed6\u6307\u4ee4\u4f18\u5316\u6280\u672f"},"\u5176\u4ed6\u6307\u4ee4\u4f18\u5316\u6280\u672f"),(0,c.kt)("p",null,"\u5176\u4ed6\u7684\u4f18\u5316\u6280\u672f"),(0,c.kt)("h2",{id:"\u9644\u5f55\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801"},"\u9644\u5f55\uff1a\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-csharp"},"public class LongArithmetics\n{\n    [Benchmark]\n    [Params(1000000)]\n    public long add_1(long n)\n    {\n        long a = 1;\n        long b = n;\n        long c = 2;\n        long d = n;\n        \n        for(long i = 0; i < n; i++)\n        {\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public long add_2(long n)\n    {\n        long a = 1;\n        long b = n;\n        long c = 2;\n        long d = n;\n        long e = 3;\n\n        for (long i = 0; i < n; i++)\n        {\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public long mul_1(long n)\n    {\n        long a = 1;\n        long b = n;\n        long c = 2;\n        long d = n;\n\n        for (long i = 0; i < n; i++)\n        {\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public long mul_2(long n)\n    {\n        long a = 1;\n        long b = n;\n        long c = 2;\n        long d = n;\n        long e = 3;\n\n        for (long i = 0; i < n; i++)\n        {\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public long div_1(long n)\n    {\n        long a = 1;\n        long b = n;\n        long c = 2;\n        long d = n;\n\n        for (long i = 0; i < n; i++)\n        {\n            b = c / a;\n            c = d / a;\n            d = b / a;\n\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            a = a / n + 1;\n        }\n        return a + b + c + d;\n    }\n\n\n    public class IntArithmetics\n{\n    [Benchmark]\n    [Params(1000000)]\n    public int add_1(int n)\n    {\n        int a = 1;\n        int b = n;\n        int c = 2;\n        int d = n;\n        \n        for(int i = 0; i < n; i++)\n        {\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public int add_2(int n)\n    {\n        int a = 1;\n        int b = n;\n        int c = 2;\n        int d = n;\n        int e = 3;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public int mul_1(int n)\n    {\n        int a = 1;\n        int b = n;\n        int c = 2;\n        int d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public int mul_2(int n)\n    {\n        int a = 1;\n        int b = n;\n        int c = 2;\n        int d = n;\n        int e = 3;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public int div_1(int n)\n    {\n        int a = 1;\n        int b = n;\n        int c = 2;\n        int d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            b = c / a;\n            c = d / a;\n            d = b / a;\n\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            a = a / n + 1;\n        }\n        return a + b + c + d;\n    }\n}\n\npublic class FloatArithmetics\n{\n    [Benchmark]\n    [Params(1000000)]\n    public float add_1(int n)\n    {\n        float a = 1;\n        float b = n;\n        float c = 2;\n        float d = n;\n        \n        for(int i = 0; i < n; i++)\n        {\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public float add_2(int n)\n    {\n        float a = 1;\n        float b = n;\n        float c = 2;\n        float d = n;\n        float e = 3;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public float mul_1(int n)\n    {\n        float a = 1;\n        float b = n;\n        float c = 2;\n        float d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public float mul_2(int n)\n    {\n        float a = 1;\n        float b = n;\n        float c = 2;\n        float d = n;\n        float e = 3;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public float div_1(int n)\n    {\n        float a = 1;\n        float b = n;\n        float c = 2;\n        float d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            b = c / a;\n            c = d / a;\n            d = b / a;\n\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            a = a / n + 1;\n        }\n        return a + b + c + d;\n    }\n}\n\npublic class DoubleArithmetics\n{\n    [Benchmark]\n    [Params(1000000)]\n    public double add_1(int n)\n    {\n        double a = 1;\n        double b = n;\n        double c = 2;\n        double d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n            a = b + c;\n            b = c + d;\n            c = d + a;\n            d = a + b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public double add_2(int n)\n    {\n        double a = 1;\n        double b = n;\n        double c = 2;\n        double d = n;\n        double e = 3;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n            a = b + c + d + e;\n            b = c + d + e + a;\n            c = d + e + a + b;\n            d = e + a + b + c;\n            e = a + b + c + d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public double mul_1(int n)\n    {\n        double a = 1;\n        double b = n;\n        double c = 2;\n        double d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n            a = b * c;\n            b = c * d;\n            c = d * a;\n            d = a * b;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public double mul_2(int n)\n    {\n        double a = 1;\n        double b = n;\n        double c = 2;\n        double d = n;\n        double e = 3;\n\n        for (int i = 0; i < n; i++)\n        {\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n            a = b * c * d * e;\n            b = c * d * e * a;\n            c = d * e * a * b;\n            d = e * a * b * c;\n            e = a * b * c * d;\n        }\n        return a + b + c + d;\n    }\n\n\n    [Benchmark]\n    [Params(1000000)]\n    public double div_1(int n)\n    {\n        double a = 1;\n        double b = n;\n        double c = 2;\n        double d = n;\n\n        for (int i = 0; i < n; i++)\n        {\n            b = c / a;\n            c = d / a;\n            d = b / a;\n\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            b = c / a;\n            c = d / a;\n            d = b / a;\n            a = a / n + 1;\n        }\n        return a + b + c + d;\n    }\n}\n\n")))}s.isMDXComponent=!0},1024:(n,a,e)=>{e.d(a,{Z:()=>d});const d=e.p+"assets/images/full_hybridclr_div_xlua-143177a79ae1387193eb9ccfb6b3cd86.jpg"},7860:(n,a,e)=>{e.d(a,{Z:()=>d});const d=e.p+"assets/images/full_hybridclr_vs_xlua-9d0605aaf28538ae1823e04d7723bd70.jpg"},9446:(n,a,e)=>{e.d(a,{Z:()=>d});const d=e.p+"assets/images/numeric_business_vs_aot_div_aot-5f9d5d52b2dd791d61ef588be2f6e1e4.jpg"},5108:(n,a,e)=>{e.d(a,{Z:()=>d});const d=e.p+"assets/images/numeric_datas-c7e623fb0136033a877678da6376da41.jpg"},9999:(n,a,e)=>{e.d(a,{Z:()=>d});const d=e.p+"assets/images/numeric_dialog_business_div_aot-44e9b55446d50bceb8b332085d55387f.jpg"},9672:(n,a,e)=>{e.d(a,{Z:()=>d});const d=e.p+"assets/images/numeric_dialog_business_div_community-e02edc41129f5859b800a362c8b91bc8.jpg"}}]);