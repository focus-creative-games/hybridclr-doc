"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6333],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},_=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=p(n),_=a,m=s["".concat(c,".").concat(_)]||s[_]||d[_]||l;return n?o.createElement(m,r(r({ref:t},u),{},{components:n})):o.createElement(m,r({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=_;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[s]="string"==typeof e?e:a,r[1]=i;for(var p=2;p<l;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}_.displayName="MDXCreateElement"},61373:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var o=n(87462),a=(n(67294),n(3905));const l={},r="il2cpp bug\u8bb0\u5f55",i={unversionedId:"basic/il2cppbugs",id:"basic/il2cppbugs",title:"il2cpp bug\u8bb0\u5f55",description:"\u9006\u53d8\u534f\u53d8\u6cdb\u578b\u63a5\u53e3\u8c03\u7528\u9519\u8bef",source:"@site/docs/basic/il2cppbugs.md",sourceDirName:"basic",slug:"/basic/il2cppbugs",permalink:"/docs/basic/il2cppbugs",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HybridCLR\u6e90\u7801\u7ed3\u6784\u53ca\u8c03\u8bd5",permalink:"/docs/basic/sourceinspect"},next:{title:"\u5546\u4e1a\u5316\u7248\u672c",permalink:"/docs/business"}},c={},p=[{value:"\u9006\u53d8\u534f\u53d8\u6cdb\u578b\u63a5\u53e3\u8c03\u7528\u9519\u8bef",id:"\u9006\u53d8\u534f\u53d8\u6cdb\u578b\u63a5\u53e3\u8c03\u7528\u9519\u8bef",level:2},{value:"obj.Func() \u975e\u865a\u8c03\u7528\u4e0d\u7b26\u5408\u89c4\u8303",id:"objfunc-\u975e\u865a\u8c03\u7528\u4e0d\u7b26\u5408\u89c4\u8303",level:2},{value:"\u5f53struct\u4e2d\u5305\u542bclass\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0cStructLayout\u7684pack\u4e0d\u4f1a\u751f\u6548",id:"\u5f53struct\u4e2d\u5305\u542bclass\u7c7b\u578b\u5bf9\u8c61\u65f6structlayout\u7684pack\u4e0d\u4f1a\u751f\u6548",level:2},{value:"\u6cdb\u578b\u6570\u7ec4\u51fd\u6570\u672a\u8bbe\u7f6etoken",id:"\u6cdb\u578b\u6570\u7ec4\u51fd\u6570\u672a\u8bbe\u7f6etoken",level:2},{value:"throw null \u4f1a\u5bfc\u81f4\u5d29\u6e83",id:"throw-null-\u4f1a\u5bfc\u81f4\u5d29\u6e83",level:2},{value:"close delegate \u7684this\u4e3anull\u65f6\uff0c\u629b\u51fa\u7684\u5f02\u5e38\u4e0d\u5408\u89c4\u8303",id:"close-delegate-\u7684this\u4e3anull\u65f6\u629b\u51fa\u7684\u5f02\u5e38\u4e0d\u5408\u89c4\u8303",level:2},{value:"2019 \u751f\u6210\u7684delegate \u8c03\u7528\u4ee3\u7801\uff0c\u672a\u6b63\u786e\u5904\u7406open delegate\uff0c\u5e76\u4e14this\u4e3aValueType\u7684\u60c5\u5f62",id:"2019-\u751f\u6210\u7684delegate-\u8c03\u7528\u4ee3\u7801\u672a\u6b63\u786e\u5904\u7406open-delegate\u5e76\u4e14this\u4e3avaluetype\u7684\u60c5\u5f62",level:2},{value:"mono\u53cail2cpp\u4e0d\u652f\u6301 instance method\u7684open delegate \u4e0a\u8c03\u7528 InvokeDyanmic",id:"mono\u53cail2cpp\u4e0d\u652f\u6301-instance-method\u7684open-delegate-\u4e0a\u8c03\u7528-invokedyanmic",level:2},{value:"2019 WebGL\u5e73\u53f0\u751f\u6210\u7684\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u4ee3\u7801\u672a\u68c0\u67e5\u7a7a\u5f15\u7528",id:"2019-webgl\u5e73\u53f0\u751f\u6210\u7684\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u4ee3\u7801\u672a\u68c0\u67e5\u7a7a\u5f15\u7528",level:2},{value:"Mono \u5bf9\u4e8eValueType\u7684\u6210\u5458\u51fd\u6570\u7684open delegate\u8c03\u7528\u590d\u5236\u800c\u4e0d\u662f\u4f20\u9012ref\u7684bug",id:"mono-\u5bf9\u4e8evaluetype\u7684\u6210\u5458\u51fd\u6570\u7684open-delegate\u8c03\u7528\u590d\u5236\u800c\u4e0d\u662f\u4f20\u9012ref\u7684bug",level:2}],u={toc:p},s="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"il2cpp-bug\u8bb0\u5f55"},"il2cpp bug\u8bb0\u5f55"),(0,a.kt)("h2",{id:"\u9006\u53d8\u534f\u53d8\u6cdb\u578b\u63a5\u53e3\u8c03\u7528\u9519\u8bef"},"\u9006\u53d8\u534f\u53d8\u6cdb\u578b\u63a5\u53e3\u8c03\u7528\u9519\u8bef"),(0,a.kt)("p",null,'\u67e5\u627eobj\u7684interface\u5b9e\u73b0\u6709\u8bef\uff0c\u6309\u89c4\u8303\u4ee5\u4e0b\u4ee3\u7801\u5e94\u8be5\u6253\u51fa"Comput B"\uff0c\u4f8b\u5982.net 6\u662f\u8fd9\u4e2a\u7ed3\u679c\uff0c\u4f46mono\u548cil2cpp\u4e0b\u5374\u6253\u5370\u51fa"Comput A"\u3002'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'\ninterface ITest<out T>\n{\n    T Comput();\n}\n\nclass A : ITest<object>\n{\n    public object Comput()\n    {\n        return "Comput A";\n    }\n}\n\nclass B : A, ITest<string>\n{\n    public string Comput()\n    {\n        return "Comput B";\n    }\n}\n\nclass App\n{\n    public static void Main()\n    {\n        ITest<object> f = new B();\n        Debug.Log(f.Comput());\n    }\n}\n\n')),(0,a.kt)("h2",{id:"objfunc-\u975e\u865a\u8c03\u7528\u4e0d\u7b26\u5408\u89c4\u8303"},"obj.Func() \u975e\u865a\u8c03\u7528\u4e0d\u7b26\u5408\u89c4\u8303"),(0,a.kt)("p",null,'ECMA\u89c4\u8303\u5141\u8bb8\u5bf9null\u4f7f\u7528call\u6307\u4ee4\u8fdb\u884c\u975e\u865a\u8c03\u7528\uff0c\u4f46il2cpp\u5374\u5728\u8c03\u7528\u524d\u63d2\u5165\u4e86NullCheck\u64cd\u4f5c\u3002\u5bfc\u81f4\u4ee5\u4e0b\u4ee3\u7801\u5728mono\u4e0b\u4f1a\u6253\u5370\u51fa "hello"\uff0c\u800c\u5728il2cpp\u4e0b\u629b\u4e86NullReferenceException\u3002'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'\nclass TestNull\n{\n    public void Show()\n    {\n        Debug.Log("hello");\n    }\n}\n\nclass App\n{\n    public void Main()\n    {\n        TestNull nu = null;\n        nu.Show();\n    }\n}\n\n')),(0,a.kt)("h2",{id:"\u5f53struct\u4e2d\u5305\u542bclass\u7c7b\u578b\u5bf9\u8c61\u65f6structlayout\u7684pack\u4e0d\u4f1a\u751f\u6548"},"\u5f53struct\u4e2d\u5305\u542bclass\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0cStructLayout\u7684pack\u4e0d\u4f1a\u751f\u6548"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"    [StructLayout( LayoutKind.Sequential, Pack = 1)]\n    struct StructWithoutClass\n    {\n        byte a;\n        long b;\n    }\n\n    [StructLayout(LayoutKind.Sequential, Pack = 1)]\n    struct StructWithClass\n    {\n        byte a;\n        object b;\n    }\n")),(0,a.kt)("p",null,"x64\u4e0b\u8fd9\u4e24\u4e2astruct\u8ba1\u7b97\u7684size\u90fd\u5e94\u8be5=9\uff0c\u8fd0\u884c.net 6\u7a0b\u5e8f\u6d4b\u8bd5\u4e5f\u9a8c\u8bc1\u4e86\u8fd9\u70b9\u3002\u4f46\u5728mono\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u6784\u8ba1\u7b97\u503c\u662f9\uff0c\u7b2c2\u4e2a\u662f16."),(0,a.kt)("h2",{id:"\u6cdb\u578b\u6570\u7ec4\u51fd\u6570\u672a\u8bbe\u7f6etoken"},"\u6cdb\u578b\u6570\u7ec4\u51fd\u6570\u672a\u8bbe\u7f6etoken"),(0,a.kt)("p",null,"metadata/ArrayMetadata.cpp\u4e2d"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    static MethodInfo* ConstructGenericArrayMethod(const GenericArrayMethod& genericArrayMethod, Il2CppClass* klass, Il2CppGenericContext* context)\n    {\n        MethodInfo* inflatedMethod = (MethodInfo*)MetadataCalloc(1, sizeof(MethodInfo));\n        inflatedMethod->name = StringUtils::StringDuplicate(genericArrayMethod.name.c_str());\n        inflatedMethod->klass = klass;\n\n        const MethodInfo* methodToCopyDataFrom = genericArrayMethod.method;\n        if (genericArrayMethod.method->is_generic)\n        {\n            const Il2CppGenericMethod* genericMethod = MetadataCache::GetGenericMethod(genericArrayMethod.method, context->class_inst, context->method_inst);\n            methodToCopyDataFrom = GenericMethod::GetMethod(genericMethod);\n\n            inflatedMethod->is_inflated = true;\n            inflatedMethod->genericMethod = genericMethod;\n            inflatedMethod->rgctx_data = methodToCopyDataFrom->rgctx_data;\n        }\n        // ==={{ add by HybridCLR\n        inflatedMethod->token = methodToCopyDataFrom->token;\n        // ===}} add by HybridCLR\n        inflatedMethod->slot = methodToCopyDataFrom->slot;\n        inflatedMethod->parameters_count = methodToCopyDataFrom->parameters_count;\n        inflatedMethod->parameters = methodToCopyDataFrom->parameters;\n        inflatedMethod->return_type = methodToCopyDataFrom->return_type;\n\n        inflatedMethod->methodPointer = methodToCopyDataFrom->methodPointer;\n        inflatedMethod->invoker_method = methodToCopyDataFrom->invoker_method;\n\n        return inflatedMethod;\n    }\n")),(0,a.kt)("h2",{id:"throw-null-\u4f1a\u5bfc\u81f4\u5d29\u6e83"},"throw null \u4f1a\u5bfc\u81f4\u5d29\u6e83"),(0,a.kt)("p",null,"\u5bf9\u4e8e c#\u4ee3\u7801  ",(0,a.kt)("inlineCode",{parentName:"p"},"throw ex;")," \u4f1a\u751f\u6210\u5982\u4e0b\u4ee3\u7801\uff0c\u5f53",(0,a.kt)("inlineCode",{parentName:"p"},"ex = null"),"\u65f6\u5d29\u6e83\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"    IL2CPP_RAISE_MANAGED_EXCEPTION(L_107, TestCase_Run_m5B897FE9D1ABDC1AA114D3482A6613BAAE3243F6_RuntimeMethod_var);\n")),(0,a.kt)("h2",{id:"close-delegate-\u7684this\u4e3anull\u65f6\u629b\u51fa\u7684\u5f02\u5e38\u4e0d\u5408\u89c4\u8303"},"close delegate \u7684this\u4e3anull\u65f6\uff0c\u629b\u51fa\u7684\u5f02\u5e38\u4e0d\u5408\u89c4\u8303"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Delegate.Create(XXInstanceMethod, null)")," \uff0c\u8c03\u7528\u65f6\u5e94\u8be5\u629b\u51fa NullReferenceException\u5f02\u5e38\uff0c\u800cunity2021\u7248\u672c\u629b\u51fa\u4e86ArgumentException\u3002"),(0,a.kt)("h2",{id:"2019-\u751f\u6210\u7684delegate-\u8c03\u7528\u4ee3\u7801\u672a\u6b63\u786e\u5904\u7406open-delegate\u5e76\u4e14this\u4e3avaluetype\u7684\u60c5\u5f62"},"2019 \u751f\u6210\u7684delegate \u8c03\u7528\u4ee3\u7801\uff0c\u672a\u6b63\u786e\u5904\u7406open delegate\uff0c\u5e76\u4e14this\u4e3aValueType\u7684\u60c5\u5f62"),(0,a.kt)("p",null,"\u5f53\u4f7f\u7528open delegate\uff0c\u5e76\u4e14 ref ValueType\u4f5c\u4e3athis\u53c2\u6570\u65f6\uff0c\u4f1a\u9519\u8bef\u5730\u4ea7\u751f\u4e24\u6b21\u8c03\u7528\uff01"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"    if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))\n    {\n        typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);\n        result = ((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___a0) - 1), ___b1, targetMethod);\n    }\n    if (targetThis == NULL)\n    {\n        typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);\n        result = ((FunctionPointerType)targetMethodPointer)((RuntimeObject*)(reinterpret_cast<RuntimeObject*>(___a0) - 1), ___b1, targetMethod);\n    }\n    else\n    {\n        typedef int32_t (*FunctionPointerType) (void*, FT_AOT_ValueType_t851DF541610F2A3DE72568571355F3953F0063AF *, int32_t, const RuntimeMethod*);\n        result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___a0, ___b1, targetMethod);\n    }\n\n")),(0,a.kt)("h2",{id:"mono\u53cail2cpp\u4e0d\u652f\u6301-instance-method\u7684open-delegate-\u4e0a\u8c03\u7528-invokedyanmic"},"mono\u53cail2cpp\u4e0d\u652f\u6301 instance method\u7684open delegate \u4e0a\u8c03\u7528 InvokeDyanmic"),(0,a.kt)("p",null,"\u4f1a\u629b\u51fa 'Object does not match target type' \u9519\u8bef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'    public void void_class_intp_open_reflection()\n    {\n        var b = new FT_Class() { x = 1, y = 2f, z = "abc" };\n        var m = typeof(FT_Class).GetMethod("Run");\n        var del = (Action<FT_Class, int>)Delegate.CreateDelegate(typeof(Action<FT_Class, int>), null, m);\n        del.DynamicInvoke(b, 4);\n        Assert.Equal(5, b.x);\n\n        var dd = del + del;\n        dd.DynamicInvoke(b, 1);\n        Assert.Equal(7, b.x);\n\n        Assert.ExpectException<NullReferenceException>();\n        del.DynamicInvoke(null, 4);\n        Assert.Fail();\n    }\n')),(0,a.kt)("h2",{id:"2019-webgl\u5e73\u53f0\u751f\u6210\u7684\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u4ee3\u7801\u672a\u68c0\u67e5\u7a7a\u5f15\u7528"},"2019 WebGL\u5e73\u53f0\u751f\u6210\u7684\u5bf9\u8c61\u6210\u5458\u8bbf\u95ee\u4ee3\u7801\u672a\u68c0\u67e5\u7a7a\u5f15\u7528"),(0,a.kt)("p",null,"\u53d6\u7c7b\u6210\u5458\u5b57\u6bb5\u65f6\u672a\u68c0\u67e5\u662f\u5426\u7a7a\u6307\u9488\u3002\u76ee\u524d\u53d1\u73b0\u53ea\u6709WebGL\u5e73\u53f0\u624d\u4f1a\u8fd9\u6837\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"\n//WebGL\u5e73\u53f0\u6ca1\u6709NullCheck\nIL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FT_AOT_Class_Run2_m0451FFC153671CD294EB1178A01AB2D92202624C (FT_AOT_Class_t03C2F346FF0EA8694088FD3F901E6536935FB2BA * ___s0, int32_t ___b1, const RuntimeMethod* method)\n{\n    {\n        // s.x += b;\n        FT_AOT_Class_t03C2F346FF0EA8694088FD3F901E6536935FB2BA * L_0 = ___s0;\n        FT_AOT_Class_t03C2F346FF0EA8694088FD3F901E6536935FB2BA * L_1 = L_0;\n        int32_t L_2 = L_1->get_x_0();\n        int32_t L_3 = ___b1;\n        L_1->set_x_0(((int32_t)il2cpp_codegen_add((int32_t)L_2, (int32_t)L_3)));\n        // }\n        return;\n    }\n}\n\n// \u5176\u4ed6\u5e73\u53f0\u6709NullCheck\nIL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FT_AOT_Class_Run2_m0451FFC153671CD294EB1178A01AB2D92202624C (FT_AOT_Class_t03C2F346FF0EA8694088FD3F901E6536935FB2BA * ___s0, int32_t ___b1, const RuntimeMethod* method)\n{\n    {\n        // s.x += b;\n        FT_AOT_Class_t03C2F346FF0EA8694088FD3F901E6536935FB2BA * L_0 = ___s0;\n        FT_AOT_Class_t03C2F346FF0EA8694088FD3F901E6536935FB2BA * L_1 = L_0;\n        NullCheck(L_1);\n        int32_t L_2 = L_1->get_x_0();\n        int32_t L_3 = ___b1;\n        NullCheck(L_1);\n        L_1->set_x_0(((int32_t)il2cpp_codegen_add((int32_t)L_2, (int32_t)L_3)));\n        // }\n        return;\n    }\n}\n")),(0,a.kt)("h2",{id:"mono-\u5bf9\u4e8evaluetype\u7684\u6210\u5458\u51fd\u6570\u7684open-delegate\u8c03\u7528\u590d\u5236\u800c\u4e0d\u662f\u4f20\u9012ref\u7684bug"},"Mono \u5bf9\u4e8eValueType\u7684\u6210\u5458\u51fd\u6570\u7684open delegate\u8c03\u7528\u590d\u5236\u800c\u4e0d\u662f\u4f20\u9012ref\u7684bug"),(0,a.kt)("p",null,"\u5728il2cpp\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'        public void void_valuetype_instance_open_interp()\n        {\n            var b = new FT_ValueType() { x = 1, y = 2f, z = "abc" };\n            var m = typeof(FT_ValueType).GetMethod("Run");\n            var invoke = typeof(ValueTypeRun).GetMethod("Invoke");\n            var del = (ValueTypeRun)Delegate.CreateDelegate(typeof(ValueTypeRun), null, m);\n\n            object c = b;\n            invoke.Invoke(del, new object[] { c, 1 });\n            // mono BUG!!! mono \u4f1a\u5728\u6b64\u5904\u65ad\u8a00\u5931\u8d25, get value 1\u3002\n            // \u4f46il2cpp\u5374\u662f\u6b63\u786e\u7684!\n            Assert.Equal(2, ((FT_ValueType)c).x);\n\n            var dd = del + del;\n            invoke.Invoke(dd, new object[] { c, 1 });\n            Assert.Equal(4, ((FT_ValueType)c).x);\n        }\n')))}d.isMDXComponent=!0}}]);