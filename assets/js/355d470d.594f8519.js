"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9451],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),m=l,k=c["".concat(o,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(k,r(r({ref:t},d),{},{components:n})):a.createElement(k,r({ref:t},d))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[c]="string"==typeof e?e:l,r[1]=p;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5507:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const i={slug:"principle",authors:{name:"walon"}},r="hybridclr\u6280\u672f\u539f\u7406\u5256\u6790",p={permalink:"/blog/principle",source:"@site/blog/2022-07-13-principle.md",title:"hybridclr\u6280\u672f\u539f\u7406\u5256\u6790",description:"\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u5b8c\u6210\u4e86hybridclr\u53ef\u884c\u6027\u5206\u6790\u3002\u7531\u4e8ehybridclr\u5185\u5bb9\u6781\u591a\uff0c\u9650\u4e8e\u7bc7\u5e45\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u6982\u8ff0\u6027\u4ecb\u7ecdhybridclr\u7684\u6280\u672f\u5b9e\u73b0\u3002",date:"2022-07-13T00:00:00.000Z",formattedDate:"2022\u5e747\u670813\u65e5",tags:[],readingTime:22.81,hasTruncateMarker:!1,authors:[{name:"walon"}],frontMatter:{slug:"principle",authors:{name:"walon"}},prevItem:{title:"hybridclr\u6307\u4ee4\u96c6\u8bbe\u8ba1",permalink:"/blog/instructions"},nextItem:{title:"\u5173\u4e8ehybridclr\u53ef\u884c\u6027\u7684\u601d\u7ef4\u5b9e\u9a8c",permalink:"/blog/mindexperiment"}},o={authorsImageUrls:[void 0]},s=[{value:"CLR\u548cil2cpp\u57fa\u7840",id:"clr\u548cil2cpp\u57fa\u7840",level:2},{value:"\u6838\u5fc3\u6a21\u5757",id:"\u6838\u5fc3\u6a21\u5757",level:2},{value:"metadata \u521d\u7ea7\u89e3\u6790",id:"metadata-\u521d\u7ea7\u89e3\u6790",level:2},{value:"PE \u6587\u4ef6\u7ed3\u6784\u89e3\u6790",id:"pe-\u6587\u4ef6\u7ed3\u6784\u89e3\u6790",level:3},{value:"tables metadata \u89e3\u6790",id:"tables-metadata-\u89e3\u6790",level:3},{value:"table \u89e3\u6790",id:"table-\u89e3\u6790",level:3},{value:"metadata\u9ad8\u7ea7\u5143\u6570\u636e\u7ed3\u6784\u89e3\u6790",id:"metadata\u9ad8\u7ea7\u5143\u6570\u636e\u7ed3\u6784\u89e3\u6790",level:2},{value:"metadata\u52a8\u6001\u6ce8\u518c",id:"metadata\u52a8\u6001\u6ce8\u518c",level:2},{value:"Assembly \u6ce8\u518c",id:"assembly-\u6ce8\u518c",level:3},{value:"TypeDefinition \u6ce8\u518c",id:"typedefinition-\u6ce8\u518c",level:3},{value:"Il2CppClass\u57fa\u7840\u521b\u5efa",id:"il2cppclass\u57fa\u7840\u521b\u5efa",level:4},{value:"Il2CppClass\u7684\u5b50metadata\u5ef6\u8fdf\u521d\u59cb\u5316",id:"il2cppclass\u7684\u5b50metadata\u5ef6\u8fdf\u521d\u59cb\u5316",level:4},{value:"\u8fd0\u884c\u65f6Class\u521d\u59cb\u5316",id:"\u8fd0\u884c\u65f6class\u521d\u59cb\u5316",level:4},{value:"VTable\u865a\u8868\u8ba1\u7b97",id:"vtable\u865a\u8868\u8ba1\u7b97",level:3},{value:"\u5176\u4ed6\u5143\u6570\u636e",id:"\u5176\u4ed6\u5143\u6570\u636e",level:3},{value:"\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u8bbe\u8ba1",id:"\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u8bbe\u8ba1",level:2},{value:"\u6307\u4ee4\u96c6\u7684\u8f6c\u6362",id:"\u6307\u4ee4\u96c6\u7684\u8f6c\u6362",level:2},{value:"\u89e3\u91ca\u6267\u884chybridclr\u6307\u4ee4\u96c6",id:"\u89e3\u91ca\u6267\u884chybridclr\u6307\u4ee4\u96c6",level:2},{value:"\u5176\u4ed6\u5982GC\u3001\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406",id:"\u5176\u4ed6\u5982gc\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406",level:2},{value:"GC",id:"gc",level:3},{value:"\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406",id:"\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u6211\u4eec\u5728\u4e0a\u4e00\u8282\u5b8c\u6210\u4e86hybridclr\u53ef\u884c\u6027\u5206\u6790\u3002\u7531\u4e8ehybridclr\u5185\u5bb9\u6781\u591a\uff0c\u9650\u4e8e\u7bc7\u5e45\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u6982\u8ff0\u6027\u4ecb\u7ecdhybridclr\u7684\u6280\u672f\u5b9e\u73b0\u3002"),(0,l.kt)("h2",{id:"clr\u548cil2cpp\u57fa\u7840"},"CLR\u548cil2cpp\u57fa\u7840"),(0,l.kt)("p",null,"\u7ed9\u7eafAOT\u7684il2cpp\u8fd0\u884c\u65f6\u6dfb\u52a0\u4e00\u4e2a\u539f\u751finterpreter\u6a21\u5757\uff0c\u6700\u7ec8\u5b9e\u73b0",(0,l.kt)("a",{parentName:"p",href:"https://developpaper.com/new-net-interpreter-mono-has-arrived/"},"hybrid mode execution"),"\uff0c\u8fd9\u770b\u8d77\u6765\u662f\u975e\u5e38\u590d\u6742\u7684\u4e8b\u60c5\u3002"),(0,l.kt)("p",null,"\u5176\u5b9e\u4e0d\u7136\uff0c\u7a0b\u5e8f\u4e0d\u5916\u4e4e\u4ee3\u7801+\u6570\u636e\u3002CLR\u8fd0\u884c\u4e2d\u505a\u7684\u4e8b\u60c5\uff0c\u7efc\u5408\u8d77\u6765\u4e3b\u8981\u5c31\u51e0\u79cd\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u6267\u884c\u7b80\u5355\u7684\u5185\u5b58\u64cd\u4f5c\u6216\u8005\u8ba1\u7b97\u6216\u8005\u903b\u8f91\u8df3\u8f6c\u3002\u8fd9\u90e8\u5206\u4e0eCLI\u7684Base\u6307\u4ee4\u96c6\u5927\u81f4\u5bf9\u5e94"),(0,l.kt)("li",{parentName:"ol"},"\u6267\u884c\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u5143\u6570\u636e\u4fe1\u606f\u7684\u57fa\u7840\u64cd\u4f5c\u3002\u4f8b\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"a.x, arr[3]")," \u8fd9\u79cd\uff0c\u4f9d\u8d56\u4e8e\u5143\u6570\u636e\u4fe1\u606f\u624d\u80fd\u6b63\u786e\u5de5\u4f5c\u7684\u4ee3\u7801\u3002\u5bf9\u5e94\u90e8\u5206CLI\u7684Object Model\u6307\u4ee4\u96c6\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u6267\u884c\u4e00\u4e2a\u4f9d\u8d56\u5143\u6570\u636e\u7684\u8f83\u590d\u6742\u7684\u64cd\u4f5c\u3002\u5982 ",(0,l.kt)("inlineCode",{parentName:"li"},"typeof(object)\uff0ca is string\u3001(object)5")," \u8fd9\u79cd\u4f9d\u8d56\u4e8e\u8fd0\u884c\u65f6\u63d0\u4f9b\u7684\u51fd\u6570\u53ca\u76f8\u5e94\u5143\u6570\u636e\u624d\u6b63\u786e\u5de5\u4f5c\u7684\u4ee3\u7801\u3002\u5bf9\u5e94\u90e8\u5206CLI\u7684Object Model\u6307\u4ee4\u96c6\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u51fd\u6570\u8c03\u7528\u3002\u5305\u62ec\u4e14\u4e0d\u9650\u4e8e\u88abAOT\u51fd\u6570\u8c03\u7528\u53ca\u8c03\u7528AOT\u51fd\u6570\uff0c\u53cainterpreter\u4e4b\u95f4\u7684\u51fd\u6570\u8c03\u7528\u3002\u5bf9\u5e94CLI\u6307\u4ee4\u96c6\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"call\u3001callvir\u3001newobj")," \u7b49Object Model\u6307\u4ee4\u3002")),(0,l.kt)("p",null,"\u5982\u679c\u5bf9CLR\u6709\u6df1\u5165\u7684\u4e86\u89e3\u548c\u900f\u5f7b\u7684\u5206\u6790\uff0c\u4e3a\u4e86\u5b9e\u73b0",(0,l.kt)("inlineCode",{parentName:"p"},"hybrid mode execution"),"\uff0chybridclr\u6838\u5fc3\u8981\u5b8c\u6210\u7684\u5c31\u4ee5\u4e0b\u4e24\u4ef6\u4e8b\uff0c\u5176\u4ed6\u5219\u662f\u65e0\u788d\u5168\u5c40\u7684\u7ec6\u8282\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"assembly\u4fe1\u606f\u80fd\u591f\u52a0\u8f7d\u548c\u6ce8\u518c\u3002 \u5728\u6b64\u57fa\u7840\u53ef\u4ee5\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"1-3"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u786e\u4fddinterpreter\u51fd\u6570\u80fd\u88ab\u627e\u5230\u5e76\u4e14\u88ab\u8c03\u7528\uff0c\u5e76\u4e14\u80fd\u6267\u884c\u51fa\u6b63\u786e\u7684\u7ed3\u679c\u3002\u5219\u53ef\u4ee5\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"4"),"\u3002")),(0,l.kt)("p",null,"\u7531\u4e8e\u5f7b\u5e95\u7406\u89e3\u4ee5\u4e0a\u5185\u5bb9\u9700\u8981\u8f83\u4e30\u5bcc\u7684\u5bf9CLR\u7684\u8ba4\u77e5\u4ee5\u53ca\u8f83\u5f3a\u7684\u6d1e\u5bdf\u529b\uff0c\u6211\u4eec\u4e0d\u518d\u8d39\u53e3\u820c\u89e3\u91ca\uff0c\u4e0d\u80fd\u7406\u89e3\u7684\u5f00\u53d1\u8005\u4e0d\u5fc5\u6df1\u7a76\uff0c\u7ee7\u7eed\u770b\u540e\u7eed\u7ae0\u8282\u3002"),(0,l.kt)("h2",{id:"\u6838\u5fc3\u6a21\u5757"},"\u6838\u5fc3\u6a21\u5757"),(0,l.kt)("p",null,"\u4ece\u529f\u80fd\u6765\u770b\u5305\u542b\u4ee5\u4e0b\u6838\u5fc3\u90e8\u5206\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"metadata\u521d\u7ea7\u89e3\u6790"),(0,l.kt)("li",{parentName:"ul"},"metadata\u9ad8\u7ea7\u5143\u6570\u636e\u7ed3\u6784\u89e3\u6790"),(0,l.kt)("li",{parentName:"ul"},"metadata\u52a8\u6001\u6ce8\u518c"),(0,l.kt)("li",{parentName:"ul"},"\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u8bbe\u8ba1"),(0,l.kt)("li",{parentName:"ul"},"IL\u6307\u4ee4\u96c6\u5230hybridclr\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u7684\u8f6c\u6362"),(0,l.kt)("li",{parentName:"ul"},"\u89e3\u91ca\u6267\u884chybridclr\u6307\u4ee4\u96c6"),(0,l.kt)("li",{parentName:"ul"},"\u5176\u4ed6\u5982GC\u3001\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406")),(0,l.kt)("p",null,"\u4ece\u4ee3\u7801\u7ed3\u6784\u6765\u770b\u5305\u542b\u4e09\u4e2a\u76ee\u5f55\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"metadata \u5143\u6570\u636e\u76f8\u5173"),(0,l.kt)("li",{parentName:"ul"},"transform \u6307\u4ee4\u96c6\u8f6c\u6362\u76f8\u5173"),(0,l.kt)("li",{parentName:"ul"},"interpreter \u89e3\u91ca\u5668\u76f8\u5173")),(0,l.kt)("h2",{id:"metadata-\u521d\u7ea7\u89e3\u6790"},"metadata \u521d\u7ea7\u89e3\u6790"),(0,l.kt)("p",null,"\u8fd9\u90e8\u5206\u5185\u5bb9\u6280\u672f\u95e8\u69db\u4e0d\u9ad8\uff0c\u4f46\u6bd4\u8f83\u7410\u788e\u548c\u8f9b\u82e6\uff0c\u5fe0\u5b9e\u5730\u6309\u7167 ",(0,l.kt)("a",{parentName:"p",href:"https://www.ecma-international.org/publications-and-standards/standards/ecma-335/"},"ECMA-335\u89c4\u8303")," \u7684\u6587\u6863\u5b9e\u73b0\u5373\u53ef\u3002\u5bf9\u4e8e\u5c11\u91cf\u6709\u7591\u60d1\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u7f51\u4e0a\u7684\u8d44\u6599\u6216\u8005\u501f\u9274mono\u7684\u4ee3\u7801\u3002"),(0,l.kt)("p",null,"\u76f8\u5173\u4ee3\u7801\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"hybridclr\\metadata"),"\u76ee\u5f55\uff0c\u4e3b\u8981\u5728RawImage.h\u548cRawImage.cpp\u4e2d\u5b9e\u73b0\u3002\u5982\u679c\u518d\u7ec6\u5206\uff0c\u76f8\u5173\u5b9e\u73b0\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u3002"),(0,l.kt)("h3",{id:"pe-\u6587\u4ef6\u7ed3\u6784\u89e3\u6790"},"PE \u6587\u4ef6\u7ed3\u6784\u89e3\u6790"),(0,l.kt)("p",null,"managed dll\u6269\u5c55\u4e86PE\u6587\u4ef6\u7ed3\u6784\uff0c\u589e\u52a0\u4e86CLI\u76f8\u5173metadata\u90e8\u5206\u3002\u8fd9\u73af\u8282\u7684\u4e3b\u8981\u5de5\u4f5c\u6709\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u89e3\u6790PE headers"),(0,l.kt)("li",{parentName:"ul"},"\u89e3\u6790 section headers\uff0c\u627e\u51faCLI header\uff0c\u5b9a\u4f4d\u51facli\u6570\u636e\u6bb5"),(0,l.kt)("li",{parentName:"ul"},"\u89e3\u6790\u51fa\u6240\u6709stream\u3002Stream\u662fCLI\u4e2d\u6700\u5e95\u5c42\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u4e00\uff0cCLI\u5c06\u5143\u6570\u636e\u6839\u636e\u7279\u6027\u5206\u4e3a\u51e0\u4e2a\u5927\u7c7b",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"#~ \u6d41\u3002\u5305\u542b\u6240\u6709tables\u5b9a\u4e49\uff0c\u662f\u6700\u6838\u5fc3\u7684\u5143\u6570\u636e\u7ed3\u6784"),(0,l.kt)("li",{parentName:"ul"},"#Strings \u6d41\u3002\u5305\u62ec\u4ee3\u7801\u4e2d\u975e\u6587\u6863\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u7c7b\u578b\u540d\u3001\u5b57\u6bb5\u540d\u7b49\u7b49"),(0,l.kt)("li",{parentName:"ul"},"#GUID \u6d41"),(0,l.kt)("li",{parentName:"ul"},"#Blob \u6d41\u3002\u4e00\u4e9b\u5143\u6570\u636e\u7c7b\u578b\u8fc7\u4e8e\u590d\u6742\uff0c\u4ee5blob\u683c\u5f0f\u4fdd\u5b58\u3002\u8fd8\u6709\u4e00\u4e9b\u6570\u636e\u5982\u6570\u7ec4\u521d\u59cb\u5316\u6570\u636e\u5217\u8868\uff0c\u4e5f\u5e38\u5e38\u4fdd\u5b58\u5230Blob\u6d41\u3002"),(0,l.kt)("li",{parentName:"ul"},"#- \u6d41"),(0,l.kt)("li",{parentName:"ul"},"#Pdb \u6d41\u3002\u7528\u4e8e\u8c03\u8bd5")))),(0,l.kt)("p",null,"\u89e3\u6790PE\u6587\u4ef6\u548c\u4ee3\u7801\u5728RawImage::Load\uff0c\u89e3\u6790stream\u5bf9\u5e94\u7684\u4ee3\u7801\u5728RawImage::LoadStreams\u3002"),(0,l.kt)("h3",{id:"tables-metadata-\u89e3\u6790"},"tables metadata \u89e3\u6790"),(0,l.kt)("p",null,"CLI\u4e2d\u5927\u591a\u6570metadata\u88ab\u4e3a\u51e0\u5341\u79cd\u7c7b\u578b\uff0c\u6bcf\u4e2a\u7c7b\u578b\u7684\u6570\u636e\u7ec4\u7ec7\u6210\u4e00\u4e2atable\u3002\u5bf9\u4e8e\u6bcf\u4e2atable\uff0c\u6bcf\u884c\u8bb0\u5f55\u90fd\u662f\u76f8\u540c\u5927\u5c0f\u3002"),(0,l.kt)("p",null,"\u521d\u7ea7\u89e3\u6790\u4e2d\u4e0d\u89e3\u6790table\u4e2d\u6bcf\u884c\u8bb0\u5f55\uff0c\u53ea\u89e3\u6790table\u7684\u6bcf\u884c\u8bb0\u5f55\u5927\u5c0f\u548c\u6bcf\u4e2a\u5b57\u6bb5\u504f\u79fb\u3002\u6709\u4e00\u5927\u7c7b\u5b57\u6bb5\u4e3aCoded Index\u7c7b\u578b\uff0c\u6709\u53ef\u80fd\u662f2\u62164\u5b57\u8282\uff0c\u5e76\u4e0d\u56fa\u5b9a\uff0c\u9700\u8981\u6839\u636e\u5176\u4ed6\u8868\u7684Row Count\u6765\u51b3\u5b9atable\u4e2d\u8fd9\u4e00\u5217\u7684\u5b57\u6bb5\u5927\u5c0f\u3002\u7531\u4e8etable\u5f88\u591a\uff0c\u8fd9\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u6bd4\u8f83\u7410\u788e\u6613\u9519\u3002"),(0,l.kt)("p",null,"\u5bf9\u5e94\u4ee3\u7801\u5728RawImage::LoadTables\uff0c\u622a\u53d6\u90e8\u5206\u4ee3\u7801\u5982\u4e0b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"void RawImage::BuildTableRowMetas()\n{\n    {\n        auto& table = _tableRowMetas[(int)TableType::MODULE];\n        table.push_back({ 2 });\n        table.push_back({ ComputStringIndexByte() });\n        table.push_back({ ComputGUIDIndexByte() });\n        table.push_back({ ComputGUIDIndexByte() });\n        table.push_back({ ComputGUIDIndexByte() });\n    }\n    {\n        auto& table = _tableRowMetas[(int)TableType::TYPEREF];\n        table.push_back({ ComputTableIndexByte(TableType::MODULE, TableType::MODULEREF, TableType::ASSEMBLYREF, TableType::TYPEREF, TagBits::ResoulutionScope) });\n        table.push_back({ ComputStringIndexByte() });\n        table.push_back({ ComputStringIndexByte() });\n    }\n\n    // ... \u5176\u4ed6\n}\n\n")),(0,l.kt)("h3",{id:"table-\u89e3\u6790"},"table \u89e3\u6790"),(0,l.kt)("p",null,"\u4e0a\u4e00\u8282\u5df2\u7ecf\u89e3\u6790\u51fa\u6bcf\u4e2atable\u7684\u8d77\u59cb\u6570\u636e\u4f4d\u7f6e\u3001row count\u3001\u8868\u4e2d\u6bcf\u4e2a\u5b57\u6bb5\u7684\u504f\u79fb\u548c\u5927\u5c0f\uff0c\u6709\u8db3\u591f\u7684\u4fe1\u606f\u53ef\u4ee5\u89e3\u6790\u51fa\u6bcf\u4e2atable\u4e2d\u4efb\u610frow\u7684\u6570\u636e\u3002table\u4e2drow\u7684id\u4ece1\u5f00\u59cb\u3002"),(0,l.kt)("p",null,"\u6bcf\u4e2atable\u7684row\u7684\u89e3\u6790\u65b9\u5f0f\u6839\u636eECMA\u89c4\u8303\u5b9e\u73b0\u5373\u53ef\u3002\u6bcf\u4e2atable\u7684row\u5b9a\u4e49\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata\\Coff.h"),"\u6587\u4ef6\uff0cRow\u89e3\u6790\u4ee3\u7801\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"RawImage.h"),"\u3002\u8fd9\u4e9b\u89e3\u6790\u4ee3\u7801\u90fd\u975e\u5e38\u76f8\u4f3c\uff0c\u4e3a\u4e86\u907f\u514d\u9519\u8bef\uff0c\u4f7f\u7528\u4e86\u5927\u91cf\u7684\u5b8f\uff0c\u622a\u53d6\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"TABLE2(GenericParamConstraint, TableType::GENERICPARAMCONSTRAINT, owner, constraint)\nTABLE3(MemberRef, TableType::MEMBERREF, classIdx, name, signature)\nTABLE1(StandAloneSig, TableType::STANDALONESIG, signature)\nTABLE3(MethodImpl, TableType::METHODIMPL, classIdx, methodBody, methodDeclaration)\nTABLE2(FieldRVA, TableType::FIELDRVA, rva, field)\nTABLE2(FieldLayout, TableType::FIELDLAYOUT, offset, field)\nTABLE3(Constant, TableType::CONSTANT, type, parent, value)\nTABLE2(MethodSpec, TableType::METHODSPEC, method, instantiation)\nTABLE3(CustomAttribute, TableType::CUSTOMATTRIBUTE, parent, type, value)\n\n")),(0,l.kt)("h2",{id:"metadata\u9ad8\u7ea7\u5143\u6570\u636e\u7ed3\u6784\u89e3\u6790"},"metadata\u9ad8\u7ea7\u5143\u6570\u636e\u7ed3\u6784\u89e3\u6790"),(0,l.kt)("p",null,"\u4ecetables\u91cc\u76f4\u63a5\u8bfb\u51fa\u6765\u7684\u90fd\u662f\u6301\u4e45\u5316\u7684\u521d\u59cbmetadata\uff0c\u800c\u8fd0\u884c\u65f6\u9700\u8981\u7684\u4e0d\u53ea\u662f\u8fd9\u4e9b\u7b80\u5355\u539f\u59cb\u6570\u636e\uff0c\u7ecf\u5e38\u9700\u8981\u8fdb\u4e00\u6b65resolve\u540e\u7684\u6570\u636e\u3002\u4f8b\u5982"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Il2CppType \u3002\u5373\u53ef\u4ee5\u662f\u7b80\u5355\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"int"),"\uff0c\u4e5f\u53ef\u4ee5\u662f\u6bd4\u8f83\u590d\u6742\u7684",(0,l.kt)("inlineCode",{parentName:"li"},"List<int>"),"\uff0c\u751a\u81f3\u662f\u7279\u522b\u590d\u6742\u7684",(0,l.kt)("inlineCode",{parentName:"li"},"List<(int,int)>&")),(0,l.kt)("li",{parentName:"ul"},"MethodInfo \u3002 \u5373\u53ef\u4ee5\u662f\u7b80\u5355\u7684",(0,l.kt)("inlineCode",{parentName:"li"},"object.ToString"),"\uff0c\u4e5f\u6709\u590d\u6742\u7684\u6cdb\u578b ",(0,l.kt)("inlineCode",{parentName:"li"},"IEnumerator<int>.Count"),"\u3002")),(0,l.kt)("p",null,"CLI\u7684\u6cdb\u578b\u673a\u5236\u5bfc\u81f4\u5143\u6570\u636e\u53d8\u5f97\u6781\u5176\u590d\u6742\uff0c\u5178\u578b\u7684\u662fTypeSpec\uff0cMethodSpec\uff0cMemberSpec\u76f8\u5173\u5143\u6570\u636e\u7684\u8fd0\u884c\u65f6\u89e3\u6790\u3002\u6838\u5fc3\u5b9e\u73b0\u4ee3\u7801\u5728Image.cpp\u4e2d\u5b9e\u73b0\uff0c\u5269\u4f59\u4e00\u90e8\u5206\u5728 InterpreterImage.cpp\u53caAOTHomologousImage.cpp\u4e2d\u5b9e\u73b0\u3002\u540e\u9762\u4f1a\u6709\u4e13\u95e8\u4ecb\u7ecd\u3002"),(0,l.kt)("h2",{id:"metadata\u52a8\u6001\u6ce8\u518c"},"metadata\u52a8\u6001\u6ce8\u518c"),(0,l.kt)("p",null,"\u6839\u636e\u7c92\u5ea6\u4ece\u5927\u5230\u5c0f\uff0c\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Assembly \u6ce8\u518c\u3002\u5373\u5c06\u52a0\u8f7d\u7684assembly\u6ce8\u518c\u5230il2cpp\u7684\u5143\u6570\u636e\u7ba1\u7406\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"TypeDefinition \u6ce8\u518c\u3002 \u8fd9\u4e00\u6b65\u4f1a\u751f\u6210\u57fa\u7840\u8fd0\u884c\u65f6\u7c7b\u578b Il2CppClass\u3002"),(0,l.kt)("li",{parentName:"ul"},"VTable\u865a\u8868\u8ba1\u7b97\u3002 \u7531\u4e8eil2cpp\u7684\u865a\u8868\u8ba1\u7b97\u662f\u4e2a\u9ed1\u76d2\uff0c\u5185\u90e8\u76f8\u5f53\u590d\u6742\uff0c\u6211\u4eec\u8d39\u4e86\u5f88\u591a\u529f\u592b\u624d\u7814\u7a76\u660e\u767d\u5b83\u7684\u8ba1\u7b97\u673a\u5236\u3002\u540e\u9762\u4f1a\u6709\u4e13\u95e8\u7ae0\u8282\u4ecb\u7ecdVTable\u8ba1\u7b97\uff0c\u8fd9\u513f\u4e0d\u518d\u8d58\u8ff0\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5176\u4ed6\u5143\u6570\u636e\uff0c\u5982CustomAttribute\u8ba1\u7b97\u7b49\u7b49\u3002")),(0,l.kt)("h3",{id:"assembly-\u6ce8\u518c"},"Assembly \u6ce8\u518c"),(0,l.kt)("p",null,"Assembly\u52a0\u8f7d\u7684\u5173\u952e\u51fd\u6570\u5728 il2cpp::vm::MetadataCache::LoadAssemblyFromBytes \u3002\u7531\u4e8eil2cpp\u662fAOT\u8fd0\u884c\u65f6\uff0c\u539f\u59cb\u5b9e\u73b0\u53ea\u662f\u7b80\u5355\u5730\u629b\u51fa\u5f02\u5e38\u3002\u6211\u4eec\u4fee\u6539\u548c\u5b8c\u5584\u4e86\u5b9e\u73b0\uff0c\u5728\u5176\u4e2d\u8c03\u7528\u4e86hybridclr::metadata::Assembly::LoadFromBytes\uff0c\u5b8c\u6210\u4e86Assembly\u7684\u521b\u5efa\uff0c\u7136\u540e\u518d\u6ce8\u518c\u5230\u5168\u5c40Assemblies\u5217\u8868\u3002\u76f8\u5173\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"const Il2CppAssembly* il2cpp::vm::MetadataCache::LoadAssemblyFromBytes(const char* assemblyBytes, size_t length)\n{\n    il2cpp::os::FastAutoLock lock(&il2cpp::vm::g_MetadataLock);\n\n    Il2CppAssembly* newAssembly = hybridclr::metadata::Assembly::LoadFromBytes(assemblyBytes, length, true);\n    if (newAssembly)\n    {\n        // avoid register placeholder assembly twicely.\n        for (Il2CppAssembly* ass : s_cliAssemblies)\n        {\n            if (ass == newAssembly)\n            {\n                return ass;\n            }\n        }\n        il2cpp::vm::Assembly::Register(newAssembly);\n        s_cliAssemblies.push_back(newAssembly);\n        return newAssembly;\n    }\n\n    return nullptr;\n}\n")),(0,l.kt)("h3",{id:"typedefinition-\u6ce8\u518c"},"TypeDefinition \u6ce8\u518c"),(0,l.kt)("p",null,"Assembly\u4f7f\u7528\u4e86\u5ef6\u8fdf\u521d\u59cb\u5316\u65b9\u5f0f\uff0c\u6ce8\u518c\u540eAssembly\u4e2d\u7684\u7c7b\u578b\u4fe1\u606f\u5e76\u672a\u521b\u5efa\u76f8\u5e94\u7684\u8fd0\u884c\u65f6metadata Il2CppClass\uff0c\u53ea\u6709\u5f53\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5230\u8be5\u7c7b\u578b\u65f6\u624d\u8fdb\u884c\u521d\u59cb\u5316\u3002"),(0,l.kt)("p",null,"\u7531\u4e8e\u4ea4\u53c9\u4f9d\u8d56\u4ee5\u53ca\u4e3a\u4e86\u4f18\u5316\u6027\u80fd\uff0cIl2Class\u7684\u521b\u5efa\u662f\u4e2a\u5206\u6b65\u8fc7\u7a0b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Il2CppClass \u57fa\u7840\u521b\u5efa"),(0,l.kt)("li",{parentName:"ul"},"Il2CppClass\u7684\u5b50\u5143\u6570\u636e\u5ef6\u8fdf\u521d\u59cb\u5316"),(0,l.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u65f6Class\u521d\u59cb\u5316")),(0,l.kt)("h4",{id:"il2cppclass\u57fa\u7840\u521b\u5efa"},"Il2CppClass\u57fa\u7840\u521b\u5efa"),(0,l.kt)("p",null,"\u5728\u4e0a\u4e00\u8282\u52a0\u8f7dAssembly\u65f6\u5df2\u7ecf\u521b\u5efa\u597d\u6240\u6709\u7c7b\u578b\u5bf9\u5e94\u7684\u5b9a\u4e49\u6570\u636eIl2CppTypeDefinition\uff0c\u5728 il2cpp::vm::GlobalMetadata::FromTypeDefinition \u4e2d\u5b8c\u6210Il2CppClass\u521b\u5efa\u5de5\u4f5c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Il2CppClass* il2cpp::vm::GlobalMetadata::FromTypeDefinition(TypeDefinitionIndex index)\n{\n    /// ... \u7701\u7565\u5176\u4ed6\n    Il2CppClass* typeInfo = (Il2CppClass*)IL2CPP_CALLOC(1, sizeof(Il2CppClass) + (sizeof(VirtualInvokeData) * typeDefinition->vtable_count));\n    typeInfo->klass = typeInfo;\n    typeInfo->image = GetImageForTypeDefinitionIndex(index);\n    typeInfo->name = il2cpp::vm::GlobalMetadata::GetStringFromIndex(typeDefinition->nameIndex);\n    typeInfo->namespaze = il2cpp::vm::GlobalMetadata::GetStringFromIndex(typeDefinition->namespaceIndex);\n    typeInfo->byval_arg = *il2cpp::vm::GlobalMetadata::GetIl2CppTypeFromIndex(typeDefinition->byvalTypeIndex);\n    typeInfo->this_arg = typeInfo->byval_arg;\n    typeInfo->this_arg.byref = true;\n    typeInfo->typeMetadataHandle = reinterpret_cast<const Il2CppMetadataTypeHandle>(typeDefinition);\n    typeInfo->genericContainerHandle = GetGenericContainerFromIndex(typeDefinition->genericContainerIndex);\n    typeInfo->instance_size = typeDefinitionSizes->instance_size;\n    typeInfo->actualSize = typeDefinitionSizes->instance_size;     // actualySize is instance_size for compiler generated values\n    typeInfo->native_size = typeDefinitionSizes->native_size;\n    typeInfo->static_fields_size = typeDefinitionSizes->static_fields_size;\n    typeInfo->thread_static_fields_size = typeDefinitionSizes->thread_static_fields_size;\n    typeInfo->thread_static_fields_offset = -1;\n    typeInfo->flags = typeDefinition->flags;\n    typeInfo->valuetype = (typeDefinition->bitfield >> (kBitIsValueType - 1)) & 0x1;\n    typeInfo->enumtype = (typeDefinition->bitfield >> (kBitIsEnum - 1)) & 0x1;\n    typeInfo->is_generic = typeDefinition->genericContainerIndex != kGenericContainerIndexInvalid;     // generic if we have a generic container\n    typeInfo->has_finalize = (typeDefinition->bitfield >> (kBitHasFinalizer - 1)) & 0x1;\n    typeInfo->has_cctor = (typeDefinition->bitfield >> (kBitHasStaticConstructor - 1)) & 0x1;\n    typeInfo->is_blittable = (typeDefinition->bitfield >> (kBitIsBlittable - 1)) & 0x1;\n    typeInfo->is_import_or_windows_runtime = (typeDefinition->bitfield >> (kBitIsImportOrWindowsRuntime - 1)) & 0x1;\n    typeInfo->packingSize = ConvertPackingSizeEnumToValue(static_cast<PackingSize>((typeDefinition->bitfield >> (kPackingSize - 1)) & 0xF));\n    typeInfo->method_count = typeDefinition->method_count;\n    typeInfo->property_count = typeDefinition->property_count;\n    typeInfo->field_count = typeDefinition->field_count;\n    typeInfo->event_count = typeDefinition->event_count;\n    typeInfo->nested_type_count = typeDefinition->nested_type_count;\n    typeInfo->vtable_count = typeDefinition->vtable_count;\n    typeInfo->interfaces_count = typeDefinition->interfaces_count;\n    typeInfo->interface_offsets_count = typeDefinition->interface_offsets_count;\n    typeInfo->token = typeDefinition->token;\n    typeInfo->interopData = il2cpp::vm::MetadataCache::GetInteropDataForType(&typeInfo->byval_arg);\n\n    // \u7701\u7565\u5176\u4ed6\n\n    return typeInfo;\n}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230TypeDefinition\u4e2d\u5b57\u6bb5\u76f8\u5f53\u591a\uff0c\u8fd9\u4e9b\u90fd\u662f\u5728Assembly\u52a0\u8f7d\u73af\u8282\u8ba1\u7b97\u597d\u7684\u3002"),(0,l.kt)("h4",{id:"il2cppclass\u7684\u5b50metadata\u5ef6\u8fdf\u521d\u59cb\u5316"},"Il2CppClass\u7684\u5b50metadata\u5ef6\u8fdf\u521d\u59cb\u5316"),(0,l.kt)("p",null,"\u7531\u4e8e\u4ea4\u4e92\u4f9d\u8d56\u4ee5\u53ca\u4e3a\u4e86\u4f18\u5316\u6027\u80fd\uff0cIl2Class\u7684\u5b50metadata\u6570\u636e\u4f7f\u7528\u4e86\u5ef6\u8fdf\u521d\u59cb\u5316\u7b56\u7565\uff0c\u5206\u6b65\u8fdb\u884c\uff0c\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u624d\u521d\u59cb\u5316\u3002\u4ee5\u4e0b\u4ee3\u7801\u622a\u53d6\u81ea ",(0,l.kt)("inlineCode",{parentName:"p"},"Class.h")," \u6587\u4ef6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Class\n{\n    // ... \u5176\u4ed6\u4ee3\u7801\n    static bool Init(Il2CppClass *klass);\n\n    static void SetupEvents(Il2CppClass *klass);\n    static void SetupFields(Il2CppClass *klass);\n    static void SetupMethods(Il2CppClass *klass);\n    static void SetupNestedTypes(Il2CppClass *klass);\n    static void SetupProperties(Il2CppClass *klass);\n    static void SetupTypeHierarchy(Il2CppClass *klass);\n    static void SetupInterfaces(Il2CppClass *klass);\n    // ... \u5176\u4ed6\u4ee3\u7801\n};\n\n")),(0,l.kt)("p",null,"\u91cd\u70b9\u6765\u4e86\uff01\uff01\uff01\u51fd\u6570metadata\u7684\u6267\u884c\u6307\u9488\u7684\u7ed1\u5b9a\u5728SetupMethods\u51fd\u6570\u4e2d\u5b8c\u6210\uff0c\u5176\u4e2d\u5173\u952e\u4ee3\u7801\u7247\u6bb5\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"void SetupMethodsLocked(Il2CppClass *klass, const il2cpp::os::FastAutoLock& lock)\n{\n    /// ... \u5176\u4ed6\u5ffd\u7565\u7684\u4ee3\u7801\n    for (MethodIndex index = 0; index < end; ++index)\n    {\n        Il2CppMetadataMethodInfo methodInfo = MetadataCache::GetMethodInfo(klass, index);\n\n        newMethod->name = methodInfo.name;\n\n        if (klass->valuetype)\n        {\n            Il2CppMethodPointer adjustorThunk = MetadataCache::GetAdjustorThunk(klass->image, methodInfo.token);\n            if (adjustorThunk != NULL)\n                newMethod->methodPointer = adjustorThunk;\n        }\n\n        // We did not find an adjustor thunk, or maybe did not need to look for one. Let's get the real method pointer.\n        if (newMethod->methodPointer == NULL)\n            newMethod->methodPointer = MetadataCache::GetMethodPointer(klass->image, methodInfo.token);\n\n        newMethod->invoker_method = MetadataCache::GetMethodInvoker(klass->image, methodInfo.token);\n    }\n    /// ... \u5176\u4ed6\u5ffd\u7565\u7684\u4ee3\u7801\n}\n")),(0,l.kt)("p",null,"\u51fd\u6570\u8fd0\u884c\u65f6\u5143\u6570\u636e\u7ed3\u6784\u4e3a MethodInfo\uff0c\u5b9a\u4e49\u5982\u4e0b,"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"typedef struct MethodInfo\n{\n    Il2CppMethodPointer methodPointer;\n    InvokerMethod invoker_method;\n    const char* name;\n    Il2CppClass *klass;\n    const Il2CppType *return_type;\n    const ParameterInfo* parameters;\n\n    // ... \u7701\u7565\u5176\u4ed6\n} MethodInfo;\n\n")),(0,l.kt)("p",null,"\u5176\u4e2d\u6211\u4eec\u6bd4\u8f83\u5173\u5fc3\u7684\u662fmethodPointer\u548cinvoker_method\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u3002 methodPointer\u6307\u5411\u666e\u901a\u6267\u884c\u51fd\u6570\uff0cinvoker_method\u6307\u5411\u53cd\u5c04\u6267\u884c\u51fd\u6570\u3002"),(0,l.kt)("p",null,"\u6211\u4eec\u4ee5 methodPointer\u4e3a\u4f8b\uff0c\u8fdb\u4e00\u6b65\u8ddf\u8e2a\u5b83\u7684\u8bbe\u7f6e\u8fc7\u7a0b\uff0c ",(0,l.kt)("inlineCode",{parentName:"p"},"il2cpp::vm::MetadataCache::GetMethodPointer")," \u7684\u5b9e\u73b0\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Il2CppMethodPointer il2cpp::vm::MetadataCache::GetMethodPointer(const Il2CppImage* image, uint32_t token)\n{\n    uint32_t rid = GetTokenRowId(token);\n    uint32_t table =  GetTokenType(token);\n    if (rid == 0)\n        return NULL;\n\n    // ==={{ hybridclr\n    if (hybridclr::metadata::IsInterpreterImage(image))\n    {\n        return hybridclr::metadata::MetadataModule::GetMethodPointer(image, token);\n    }\n    // ===}} hybridclr\n\n    IL2CPP_ASSERT(rid <= image->codeGenModule->methodPointerCount);\n\n    return image->codeGenModule->methodPointers[rid - 1];\n}\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u662f\u89e3\u91ca\u5668assembly\uff0c\u5c31\u8df3\u8f6c\u5230\u89e3\u91ca\u5668\u5143\u6570\u636e\u6a21\u5757\u83b7\u5f97\u5bf9\u5e94\u7684MethodPointer\u6307\u9488\u3002 \u7ee7\u7eed\u8ddf\u8e2a\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'\nIl2CppMethodPointer InterpreterImage::GetMethodPointer(uint32_t token)\n{\n    uint32_t methodIndex = DecodeTokenRowIndex(token) - 1;\n    IL2CPP_ASSERT(methodIndex < (uint32_t)_methodDefines.size());\n    const Il2CppMethodDefinition* methodDef = &_methodDefines[methodIndex];\n    return hybridclr::interpreter::InterpreterModule::GetMethodPointer(methodDef);\n}\n\nIl2CppMethodPointer InterpreterModule::GetMethodPointer(const Il2CppMethodDefinition* method)\n{\n    const NativeCallMethod* ncm = GetNativeCallMethod(method, false);\n    if (ncm)\n    {\n        return ncm->method;\n    }\n    //RaiseMethodNotSupportException(method, "GetMethodPointer");\n    return (Il2CppMethodPointer)NotSupportNative2Managed;\n}\n\n// interpreter/InterpreterModule.cpp\ntemplate<typename T>\nconst NativeCallMethod* GetNativeCallMethod(const T* method, bool forceStatic)\n{\n    char sigName[1000];\n    ComputeSignature(method, !forceStatic, sigName, sizeof(sigName) - 1);\n    auto it = s_calls.find(sigName);\n    return (it != s_calls.end()) ? &it->second : nullptr;\n}\n\n// s_calls \u5b9a\u4e49\nstatic std::unordered_map<const char*, NativeCallMethod, CStringHash, CStringEqualTo> s_calls;\n\nvoid InterpreterModule::Initialize()\n{\n    for (size_t i = 0; ; i++)\n    {\n        NativeCallMethod& method = g_callStub[i];\n        if (!method.signature)\n        {\n            break;\n        }\n        s_calls.insert({ method.signature, method });\n    }\n\n    for (size_t i = 0; ; i++)\n    {\n        NativeInvokeMethod& method = g_invokeStub[i];\n        if (!method.signature)\n        {\n            break;\n        }\n        s_invokes.insert({ method.signature, method });\n    }\n}\n')),(0,l.kt)("p",null,"\u8fd9\u513f\u6839\u636e\u51fd\u6570\u5b9a\u4e49\u8ba1\u7b97\u5176\u7b7e\u540d\u5e76\u4e14\u8fd4\u56de\u4e86\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u662f\u4ec0\u4e48\u5462\uff1f s_calls\u5728InterpreterModule::Initialize\u4e2d\u4f7f\u7528g_callStub\u521d\u59cb\u5316\u3002\u90a3g_calStub\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\u5b83\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"interpreter/MethodBridge_xxx.cpp")," \u4e2d\u5b9a\u4e49\uff0c\u539f\u6765\u662f\u6865\u63a5\u51fd\u6570\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff01"),(0,l.kt)("p",null,"\u4e3a\u4ec0\u4e48\u8981\u8fd4\u56de\u4e00\u4e2a\u8fd9\u6837\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5c06methodPointer\u6307\u5411 ",(0,l.kt)("inlineCode",{parentName:"p"},"InterpreterModule::Execute")," \u51fd\u6570\u5462\uff1f \u4ee5 ",(0,l.kt)("inlineCode",{parentName:"p"},"int Foo::Sum(int,int)")," \u51fd\u6570\u4e3a\u4f8b\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9e\u9645\u7684\u7b7e\u540d\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"int32_t (int32_t, int32_t, MethodInfo*)"),"\uff0c\u5728\u8c03\u7528\u8fd9\u4e2amethodPointer\u51fd\u6570\u65f6\uff0c\u8c03\u7528\u65b9\u4e00\u5b9a\u4f1a\u4f20\u9012\u8fd9\u4e09\u4e2a\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u6bcf\u4e2a\u51fd\u6570\u90fd\u4e0d\u4e00\u6837\uff0c\u5982\u679c\u76f4\u63a5\u6307\u5411 ",(0,l.kt)("inlineCode",{parentName:"p"},"InterpreterModule::Execute")," \u51fd\u6570\uff0c\u7531\u4e8eABI\u8c03\u7528\u65e0\u6cd5\u81ea\u7701\uff08\u5c31\u7b97\u53ef\u4ee5\uff0c\u6027\u80fd\u4e5f\u6bd4\u8f83\u5dee\uff09\uff0cExecute\u51fd\u6570\u65e2\u65e0\u6cd5\u63d0\u53d6\u51fa\u666e\u901a\u53c2\u6570\uff0c\u4e5f\u65e0\u6cd5\u63d0\u53d6\u51faMethodInfo*\u53c2\u6570\uff0c\u56e0\u800c\u65e0\u6cd5\u6b63\u786e\u8fd0\u884c\u3002\u56e0\u6b64\u9700\u8981\u5bf9\u6bcf\u4e2a\u51fd\u6570\uff0c\u9002\u5f53\u5730\u5c06ABI\u8c03\u7528\u4e2d\u7684\u8fd9\u4e9b\u53c2\u6570\u4f20\u9012\u7ed9Execute\u51fd\u6570\u3002"),(0,l.kt)("p",null,"\u6865\u63a5\u51fd\u6570\u5982\u5176\u540d\uff0c\u627f\u62c5\u4e86native ABI\u51fd\u6570\u53c2\u6570\u548cinterpreter\u51fd\u6570\u4e4b\u95f4\u53cc\u5411\u7684\u53c2\u6570\u7684\u8f6c\u6362\u4f5c\u7528\u3002\u622a\u53d6\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"\n/// AOT \u5230 interpreter \u7684\u8c03\u7528\u53c2\u6570\u8f6c\u6362\nstatic int64_t __Native2ManagedCall_i8srr8sr(void* __arg0, double __arg1, void* __arg2, const MethodInfo* method)\n{\n    StackObject args[4] = {*(void**)&__arg0, *(void**)&__arg1, *(void**)&__arg2 };\n    StackObject* ret = args + 3;\n    Interpreter::Execute(method, args, ret);\n    return *(int64_t*)ret;\n}\n\n// interpreter \u5230 AOT \u7684\u8c03\u7528\u53c2\u6570\u8f6c\u6362\nstatic void __Managed2NativeCall_i8srr8sr(const MethodInfo* method, uint16_t* argVarIndexs, StackObject* localVarBase, void* ret)\n{\n    if (hybridclr::metadata::IsInstanceMethod(method) && !localVarBase[argVarIndexs[0]].obj)\n    {\n        il2cpp::vm::Exception::RaiseNullReferenceException();\n    }\n    Interpreter::RuntimeClassCCtorInit(method);\n    typedef int64_t (*NativeMethod)(void* __arg0, double __arg1, void* __arg2, const MethodInfo* method);\n    *(int64_t*)ret = ((NativeMethod)(method->methodPointer))((void*)(localVarBase+argVarIndexs[0]), *(double*)(localVarBase+argVarIndexs[1]), (void*)(localVarBase+argVarIndexs[2]), method);\n}\n")),(0,l.kt)("h4",{id:"\u8fd0\u884c\u65f6class\u521d\u59cb\u5316"},"\u8fd0\u884c\u65f6Class\u521d\u59cb\u5316"),(0,l.kt)("p",null,"\u5373\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u5b57\u6bb5\u6216\u8005\u51fd\u6570\u65f6\u6216\u8005\u521b\u5efa\u5bf9\u8c61\u65f6\u89e6\u53d1\u7684\u7c7b\u578b\u521d\u59cb\u5316\u3002\u5728il2cpp::vm::Runtime::ClassInit(klass)\u4e2d\u5b8c\u6210\u3002\u4e0d\u662f\u7279\u522b\u5173\u952e\uff0c\u6211\u4eec\u540e\u9762\u5728\u5355\u72ec\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u3002"),(0,l.kt)("h3",{id:"vtable\u865a\u8868\u8ba1\u7b97"},"VTable\u865a\u8868\u8ba1\u7b97"),(0,l.kt)("p",null,"\u865a\u8868\u662f\u591a\u6001\u7684\u6838\u5fc3\u3002CLI\u7684\u865a\u8868\u8ba1\u7b97\u975e\u5e38\u590d\u6742\uff0c\u4f46\u4e0d\u7406\u89e3\u5b83\u7684\u5b9e\u73b0\u5e76\u4e0d\u5f71\u54cd\u5f00\u53d1\u8005\u7406\u89e3hybridclr\u7684\u6838\u5fc3\u8fd0\u884c\u6d41\u7a0b\uff0c\u6211\u4eec\u540e\u9762\u5728\u5355\u72ec\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u3002"),(0,l.kt)("h3",{id:"\u5176\u4ed6\u5143\u6570\u636e"},"\u5176\u4ed6\u5143\u6570\u636e"),(0,l.kt)("p",null,"CustomAttribute\u4f7f\u7528\u5ef6\u8fdf\u521d\u59cb\u5316\u65b9\u5f0f\uff0c\u8ba1\u7b97\u4e5f\u5f88\u590d\u6742\uff0c\u6211\u4eec\u540e\u9762\u5355\u72ec\u6587\u7ae0\u4ecb\u7ecd\u3002"),(0,l.kt)("h2",{id:"\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u8bbe\u8ba1"},"\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u8bbe\u8ba1"),(0,l.kt)("p",null,"\u76f4\u63a5\u89e3\u91ca\u539f\u59cbIL\u6307\u4ee4\u6709\u51e0\u4e2a\u95ee\u9898\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"IL\u662f\u57fa\u4e8e\u6808\u7684\u6307\u4ee4\uff0c\u8fd0\u884c\u65f6\u7ef4\u62a4\u6267\u884c\u6808\u662f\u4e2a\u65e0\u8c13\u7684\u5f00\u9500"),(0,l.kt)("li",{parentName:"ul"},"IL\u6709\u5927\u91cf\u5355\u6307\u4ee4\u591a\u529f\u80fd\u7684\u6307\u4ee4\uff0c\u5982add\u6307\u4ee4\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97int\u3001long\u3001float\u3001double\u7c7b\u578b\u7684\u548c\uff0c\u5bfc\u81f4\u8fd0\u884c\u65f6\u9700\u8981\u6839\u636e\u4e0a\u6587\u5224\u65ad\u5230\u5e95\u8be5\u6267\u884c\u54ea\u79cd\u8ba1\u7b97\u3002\u4e0d\u4ec5\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u5224\u5b9a\u7684\u5f00\u9500\uff0c\u8fd8\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u7ef4\u62a4\u6267\u884c\u6808\u6570\u636e\u7c7b\u578b\u7684\u5f00\u9500"),(0,l.kt)("li",{parentName:"ul"},"IL\u6307\u4ee4\u5305\u542b\u4e00\u4e9b\u9700\u8981\u8fd0\u884c\u65f6resolve\u7684\u6570\u636e\uff0c\u5982newobj\u6307\u4ee4\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fmethod token\u3002token resolve\u662f\u4e00\u4e2a\u5f00\u9500\u5f88\u5927\u7684\u64cd\u4f5c\uff0c\u6bcf\u6b21\u6267\u884c\u90fd\u8fdb\u884cresolve\u4f1a\u6781\u5927\u62d6\u6162\u6267\u884c\u6027\u80fd"),(0,l.kt)("li",{parentName:"ul"},"IL\u662f\u57fa\u4e8e\u6808\u7684\u6307\u4ee4\uff0c\u538b\u6808\u9000\u6808\u76f8\u5173\u6307\u4ee4\u6570\u8f83\u591a\u3002\u50cfa=b+c\u8fd9\u6837\u7684\u6307\u4ee4\u9700\u89814\u6761\u6307\u4ee4\u5b8c\u6210\uff0c\u800c\u5982\u679c\u91c7\u7528\u57fa\u4e8e\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\uff0c\u5b8c\u5168\u53ef\u4ee5\u4e00\u6761\u6307\u4ee4\u5b8c\u6210\u3002"),(0,l.kt)("li",{parentName:"ul"},"IL\u4e0d\u9002\u5408\u505a\u5176\u4ed6\u4f18\u5316\u64cd\u4f5c\uff0c\u5982\u6211\u4eec\u7684InitOnce JIT\u6280\u672f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5176\u4ed6")),(0,l.kt)("p",null,"\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5c06\u539f\u59cbIL\u6307\u4ee4\u8f6c\u6362\u4e3a\u66f4\u9ad8\u6548\u7684\u5bc4\u5b58\u5668\u6307\u4ee4\u3002\u7531\u4e8e\u6307\u4ee4\u5f88\u591a\uff0c\u8fd9\u513f\u4e0d\u4ecb\u7ecd\u5bc4\u5b58\u5668\u6307\u4ee4\u96c6\u7684\u8be6\u7ec6\u8bbe\u8ba1\u3002\u4ee5add\u6307\u4ee4\u4e3e\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"\n// \u5305\u542btype\u5b57\u6bb5\uff0c\u5373\u6307\u4ee4ID\u3002\nstruct IRCommon\n{\n    HiOpcodeEnum type;\n};\n\n// add int, int -> int \u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u6307\u4ee4\nstruct IRBinOpVarVarVar_Add_i4 : IRCommon\n{\n    uint16_t ret; // \u8ba1\u7b97\u7ed3\u679c\u5bf9\u5e94\u7684 \u6808\u4f4d\u7f6e\n    uint16_t op1; // \u64cd\u4f5c\u65701\u5bf9\u5e94\u7684\u6808\u4f4d\u7f6e\n    uint16_t op2; // \u64cd\u4f5c\u65702\u5bf9\u5e94\u7684\u6808\u4f4d\u7f6e\n};\n\n")),(0,l.kt)("h2",{id:"\u6307\u4ee4\u96c6\u7684\u8f6c\u6362"},"\u6307\u4ee4\u96c6\u7684\u8f6c\u6362"),(0,l.kt)("p",null,"\u7406\u89e3\u8fd9\u8282\u9700\u8981\u521d\u6b65\u7684\u7f16\u8bd1\u539f\u7406\u76f8\u5173\u77e5\u8bc6\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u975e\u5e38\u6734\u7d20\u7684\u8f6c\u6362\u7b97\u6cd5\uff0c\u5e76\u4e14\u57fa\u672c\u6ca1\u6709\u505a\u6307\u4ee4\u4f18\u5316\u3002\u8f6c\u6362\u8fc7\u7a0b\u5206\u4e3a\u51e0\u6b65\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"BasicBlock \u5212\u5206\u3002 \u5c06IL\u6307\u4ee4\u5757\u5207\u6210\u4e00\u6bb5\u6bb5\u4e0d\u5305\u542b\u4efb\u4f55\u8df3\u8f6c\u6307\u4ee4\u7684\u4ee3\u7801\u5757\uff0c\u79f0\u4e4b\u4e3aBasicBlock\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6a21\u62df\u6307\u4ee4\u6267\u884c\u6d41\u7a0b\uff0c\u540c\u65f6\u4f7f\u7528\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u7b97\u6cd5\u904d\u5386\u6240\u6709BasicBlock\uff0c\u5c06\u6bcf\u4e2aBasicBlock\u8f6c\u6362\u4e3aIRBasicBlock\u3002")),(0,l.kt)("p",null,"BasicBlock\u5230IRBasicBlock\u8f6c\u6362\u91c7\u7528\u4e86\u6700\u6734\u7d20\u7684\u4e00\u5bf9\u4e00\u6307\u4ee4\u8f6c\u6362\u7b97\u6cd5\uff0c\u8f6c\u6362\u76f8\u5173\u4ee3\u7801\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"transform::HiTransform::Transform"),"\u3002\u6211\u4eec\u4ee5add\u6307\u4ee4\u4e3a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"\ncase OpcodeValue::ADD:\n{\n    IL2CPP_ASSERT(evalStackTop >= 2);\n    EvalStackVarInfo& op1 = evalStack[evalStackTop - 2];\n    EvalStackVarInfo& op2 = evalStack[evalStackTop - 1];\n\n    CreateIR(ir, BinOpVarVarVar_Add_i4);\n    ir->op1 = op1.locOffset;\n    ir->op2 = op2.locOffset;\n    ir->ret = op1.locOffset;\n\n    EvalStackReduceDataType resultType;\n    switch (op1.reduceType)\n    {\n    case EvalStackReduceDataType::I4:\n    {\n        switch (op2.reduceType)\n        {\n        case EvalStackReduceDataType::I4:\n        {\n            resultType = EvalStackReduceDataType::I4;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_i4;\n            break;\n        }\n        case EvalStackReduceDataType::I:\n        case EvalStackReduceDataType::Ref:\n        {\n            CreateAddIR(irConv, ConvertVarVar_i4_i8);\n            irConv->dst = irConv->src = op1.locOffset;\n\n            resultType = op2.reduceType;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_i8;\n            break;\n        }\n        default:\n        {\n            IL2CPP_ASSERT(false);\n            break;\n        }\n        }\n        break;\n    }\n    case EvalStackReduceDataType::I8:\n    {\n        switch (op2.reduceType)\n        {\n        case EvalStackReduceDataType::I8:\n        case EvalStackReduceDataType::I: // not support i8 + i ! but we support\n        {\n            resultType = EvalStackReduceDataType::I8;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_i8;\n            break;\n        }\n        default:\n        {\n            IL2CPP_ASSERT(false);\n            break;\n        }\n        }\n        break;\n    }\n    case EvalStackReduceDataType::I:\n    case EvalStackReduceDataType::Ref:\n    {\n        switch (op2.reduceType)\n        {\n        case EvalStackReduceDataType::I4:\n        {\n            CreateAddIR(irConv, ConvertVarVar_i4_i8);\n            irConv->dst = irConv->src = op2.locOffset;\n\n            resultType = op1.reduceType;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_i8;\n            break;\n        }\n        case EvalStackReduceDataType::I:\n        case EvalStackReduceDataType::I8:\n        {\n            resultType = op1.reduceType;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_i8;\n            break;\n        }\n        default:\n        {\n            IL2CPP_ASSERT(false);\n            break;\n        }\n        }\n        break;\n    }\n    case EvalStackReduceDataType::R4:\n    {\n        switch (op2.reduceType)\n        {\n        case EvalStackReduceDataType::R4:\n        {\n            resultType = op2.reduceType;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_f4;\n            break;\n        }\n        default:\n        {\n            IL2CPP_ASSERT(false);\n            break;\n        }\n        }\n        break;\n    }\n    case EvalStackReduceDataType::R8:\n    {\n        switch (op2.reduceType)\n        {\n        case EvalStackReduceDataType::R8:\n        {\n            resultType = op2.reduceType;\n            ir->type = HiOpcodeEnum::BinOpVarVarVar_Add_f8;\n            break;\n        }\n        default:\n        {\n            IL2CPP_ASSERT(false);\n            break;\n        }\n        }\n        break;\n    }\n    default:\n    {\n        IL2CPP_ASSERT(false);\n        break;\n    }\n    }\n\n    PopStack();\n    op1.reduceType = resultType;\n    op1.byteSize = GetSizeByReduceType(resultType);\n    AddInst(ir);\n    ip++;\n    continue;\n}\n\n")),(0,l.kt)("p",null,"\u4ece\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5176\u5b9e\u8f6c\u6362\u7b97\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u6839\u636eadd\u6307\u4ee4\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u51b3\u5b9a\u8f6c\u6362\u4e3a\u54ea\u6761\u5bc4\u5b58\u5668\u6307\u4ee4\uff0c\u540c\u65f6\u6b63\u786e\u8bbe\u7f6e\u6307\u4ee4\u7684\u5b57\u6bb5\u503c\u3002"),(0,l.kt)("h2",{id:"\u89e3\u91ca\u6267\u884chybridclr\u6307\u4ee4\u96c6"},"\u89e3\u91ca\u6267\u884chybridclr\u6307\u4ee4\u96c6"),(0,l.kt)("p",null,"\u89e3\u91ca\u6267\u884c\u5728\u4ee3\u7801 ",(0,l.kt)("inlineCode",{parentName:"p"},"interpreter::InterpreterModule::Execute")," \u51fd\u6570\u4e2d\u5b8c\u6210\u3002\u6d89\u53ca\u5230\u51e0\u90e8\u5206\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u51fd\u6570\u5e27\u6784\u5efa\uff0c\u53c2\u6570\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u6267\u884c\u6808\u7684\u521d\u59cb\u5316"),(0,l.kt)("li",{parentName:"ul"},"\u6267\u884c\u666e\u901a\u6307\u4ee4"),(0,l.kt)("li",{parentName:"ul"},"\u8c03\u7528\u5b50\u51fd\u6570"),(0,l.kt)("li",{parentName:"ul"},"\u5f02\u5e38\u5904\u7406")),(0,l.kt)("p",null,"\u8fd9\u5757\u5185\u5bb9\u4e5f\u5f88\u591a\uff0c\u6211\u4eec\u4f1a\u5728\u591a\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u5b9e\u73b0\uff0c\u8fd9\u91cc\u7b80\u5355\u6458\u53d6 BinOpVarVarVar_Add_i4 \u6307\u4ee4\u7684\u5b9e\u73b0\u4ee3\u7801:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"case HiOpcodeEnum::BinOpVarVarVar_Add_i4:\n{\n    uint16_t __ret = *(uint16_t*)(ip + 2);\n    uint16_t __op1 = *(uint16_t*)(ip + 4);\n    uint16_t __op2 = *(uint16_t*)(ip + 6);\n    (*(int32_t*)(localVarBase + __ret)) = (*(int32_t*)(localVarBase + __op1)) + (*(int32_t*)(localVarBase + __op2));\n    ip += 8;\n    continue;\n}\n")),(0,l.kt)("p",null,"\u76f8\u4fe1\u8fd9\u6bb5\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u3002\u6307\u4ee4\u96c6\u8f6c\u6362\u548c\u6307\u4ee4\u89e3\u91ca\u76f8\u5173\u4ee3\u7801\u662fhybridclr\u7684\u6838\u5fc3\uff0c\u4f46\u590d\u6742\u5ea6\u5374\u4e0d\u9ad8\uff0c\u8fd9\u5f97\u611f\u8c22il2cpp\u8fd0\u884c\u65f6\u5e2e\u6211\u4eec\u627f\u62c5\u4e86\u7edd\u5927\u591a\u6570\u590d\u6742\u7684\u5143\u6570\u636e\u76f8\u5173\u64cd\u4f5c\u7684\u652f\u6301\u3002"),(0,l.kt)("h2",{id:"\u5176\u4ed6\u5982gc\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406"},"\u5176\u4ed6\u5982GC\u3001\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406"),(0,l.kt)("p",null,"\u6211\u4eec\u5728hybridclr\u53ef\u884c\u6027\u7684\u601d\u7ef4\u5b9e\u9a8c\u4e2d\u5206\u6790\u8fc7\u8fd9\u4e24\u90e8\u5206\u5b9e\u73b0\u3002"),(0,l.kt)("h3",{id:"gc"},"GC"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u5bf9\u8c61\u5206\u914d\uff0c\u6211\u4eec\u4f7f\u7528il2cpp::vm::Object::New\u51fd\u6570\u5206\u914d\u5bf9\u8c61\u5373\u53ef\u3002\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u6d89\u53ca\u5230GC\u7684\u90e8\u5206\u5982ldstr\u6307\u4ee4\u4e2dIl2CppString\u5bf9\u8c61\u7684\u7f13\u5b58\uff0c\u5229\u7528\u4e86\u4e00\u4e9b\u5176\u4ed6il2cpp\u8fd0\u884c\u65f6\u63d0\u4f9b\u7684GC\u673a\u5236\u3002"),(0,l.kt)("h3",{id:"\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406"},"\u591a\u7ebf\u7a0b\u76f8\u5173\u5904\u7406"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"volatile \u3002\u5bf9\u4e8e\u6307\u4ee4\u4e2d\u5305\u542bvolatile\u524d\u7f00\u6307\u4ee4\uff0c\u6211\u4eec\u7b80\u5355\u5728\u6267\u884c\u4ee3\u7801\u524d\u540e\u63d2\u5165MemoryBarrier\u3002"),(0,l.kt)("li",{parentName:"ul"},"ThreadStatic \u3002 \u4f7f\u7528il2cpp\u5185\u7f6e\u7684Class\u7684ThreadStatic\u53d8\u91cf\u673a\u5236\u5373\u53ef\u3002"),(0,l.kt)("li",{parentName:"ul"},"Thread\u3002 \u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u6258\u7ba1\u7ebf\u7a0b\uff0c\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u5e94\u7684\u89e3\u91ca\u5668\u6808\u3002"),(0,l.kt)("li",{parentName:"ul"},"async \u76f8\u5173\u3002\u7531\u4e8e\u5f02\u6b65\u76f8\u5173\u53ea\u662f\u8bed\u6cd5\u7cd6\uff0c\u7531\u7f16\u8bd1\u5668\u548c\u6807\u51c6\u5e93\u5b8c\u6210\u4e86\u6240\u6709\u5185\u5bb9\u3002hybridclr\u53ea\u9700\u8981\u89e3\u51b3\u5176\u4e2d\u4ea7\u751f\u7684AOT\u6cdb\u578b\u5b9e\u4f8b\u5316\u7684\u95ee\u9898\u5373\u53ef\u3002")),(0,l.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,l.kt)("p",null,"\u6982\u62ec\u5730\u8bf4\uff0chybridclr\u7684\u5b9e\u73b0\u4e3a\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"MetadataCache::LoadAssemblyFromBytes \uff08c#\u5c42\u8c03\u7528Assembly.Load\u65f6\u89e6\u53d1\uff09\u65f6\u52a0\u8f7d\u5e76\u6ce8\u518cinterpreter Assembly"),(0,l.kt)("li",{parentName:"ul"},"il2cpp\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5ef6\u8fdf\u521d\u59cb\u5316\u7c7b\u578b\u76f8\u5173\u5143\u6570\u636e\uff0c\u5176\u4e2d\u5173\u952e\u4e3a\u6b63\u786e\u8bbe\u7f6e\u4e86MethodInfo\u5143\u6570\u636e\u4e2dmethodPointer\u6307\u9488"),(0,l.kt)("li",{parentName:"ul"},"il2cpp\u8fd0\u884c\u65f6\u901a\u8fc7methodPointer\u6216\u8005methodInvoke\u6307\u9488\uff0c\u518d\u7ecf\u8fc7\u6865\u63a5\u51fd\u6570\u8df3\u8f6c\uff0c\u6700\u7ec8\u6267\u884c\u4e86Interpreter::Execute\u51fd\u6570\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Execute\u51fd\u6570\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u67d0interpreter\u51fd\u6570\u65f6\u89e6\u53d1HiTransform::Transform\u64cd\u4f5c\uff0c\u5c06\u539f\u59cbIL\u6307\u4ee4\u7ffb\u8bd1\u4e3ahybridclr\u7684\u5bc4\u5b58\u5668\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7136\u540e\u6267\u884c\u8be5\u51fd\u6570\u5bf9\u5e94\u7684hybridclr\u5bc4\u5b58\u5668\u6307\u4ee4\u3002")))),(0,l.kt)("p",null,"\u81f3\u6b64\u5b8c\u6210hybridclr\u7684\u6280\u672f\u539f\u7406\u4ecb\u7ecd\u3002"))}u.isMDXComponent=!0}}]);